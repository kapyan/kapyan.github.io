<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>运维之窗</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.kapyan.top/"/>
  <updated>2019-01-21T09:37:36.525Z</updated>
  <id>http://www.kapyan.top/</id>
  
  <author>
    <name>没有风的晴天</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>zabbix添加nginx监控</title>
    <link href="http://www.kapyan.top/posts/4255676476.html"/>
    <id>http://www.kapyan.top/posts/4255676476.html</id>
    <published>2019-01-21T08:17:35.000Z</published>
    <updated>2019-01-21T09:37:36.525Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx开启监控模块"><a href="#nginx开启监控模块" class="headerlink" title="nginx开启监控模块"></a>nginx开启监控模块</h2><p>修改nginx的配置，在nginx配置的server域加入以下配置，然后重启nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /nginx_status &#123;</span><br><span class="line">             stub_status on;</span><br><span class="line">             access_log off;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>执行命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1/nginx_status</span><br></pre></td></tr></table></figure></p><p>可看到输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 3144 3144 3144 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure></p><h2 id="编辑nginx监控脚本"><a href="#编辑nginx监控脚本" class="headerlink" title="编辑nginx监控脚本"></a>编辑nginx监控脚本</h2><p>在需要监控的nginx服务器上新建文件”/etc/zabbix/scripts/nginx_monitor.sh”(scripts目录需创建)，加入以下內容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">status_url=<span class="string">"http://127.0.0.1/nginx_status"</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">status)</span><br><span class="line">countor=$(ps -C nginx --no-heading|wc -l)</span><br><span class="line">      <span class="keyword">if</span> [ <span class="variable">$&#123;countor&#125;</span> -eq <span class="string">"0"</span> ];<span class="keyword">then</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">"stop"</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">"running"</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">                ;;</span><br><span class="line"></span><br><span class="line">active_conn)</span><br><span class="line">curl <span class="variable">$status_url</span> 2&gt;/dev/null|awk -F <span class="string">":"</span> <span class="string">'NR==1&#123;print $2&#125;'</span></span><br><span class="line">;;</span><br><span class="line">accepts)</span><br><span class="line">curl <span class="variable">$status_url</span> 2&gt;/dev/null|awk <span class="string">'NR==3&#123;print $1&#125;'</span></span><br><span class="line">;;</span><br><span class="line">handled)</span><br><span class="line">curl <span class="variable">$status_url</span> 2&gt;/dev/null|awk <span class="string">'NR==3&#123;print $2&#125;'</span></span><br><span class="line">;;</span><br><span class="line">requests)</span><br><span class="line">curl <span class="variable">$status_url</span> 2&gt;/dev/null|awk <span class="string">'NR==3&#123;print $3&#125;'</span></span><br><span class="line">;;</span><br><span class="line">reading)</span><br><span class="line">curl <span class="variable">$status_url</span> 2&gt;/dev/null|awk <span class="string">'NR==4&#123;print $2&#125;'</span></span><br><span class="line">;;</span><br><span class="line">writing)</span><br><span class="line">curl <span class="variable">$status_url</span> 2&gt;/dev/null|awk <span class="string">'NR==4&#123;print $4&#125;'</span></span><br><span class="line">;;</span><br><span class="line">waiting)</span><br><span class="line">curl <span class="variable">$status_url</span> 2&gt;/dev/null|awk <span class="string">'NR==4&#123;print $6&#125;'</span></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(basename $0)</span> (status|active_conn|accepts|handled|requests|reading|writing|waiting)"</span></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p><p>给予脚本执行权限：<code>chmod +x /etc/zabbix/scripts/nginx_monitor.sh</code></p><h2 id="修改zabbix-agent配置"><a href="#修改zabbix-agent配置" class="headerlink" title="修改zabbix-agent配置"></a>修改zabbix-agent配置</h2><p>在需要监控的nginx服务器上新建”/etc/zabbix/zabbix_agentd.d/userparameter_nginx.conf”文件，添加如下配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=nginx.status[*],/etc/zabbix/scripts/nginx_monitor.sh <span class="variable">$1</span></span><br></pre></td></tr></table></figure></p><p>重启zabbix-agent：<code>systemctl restart zabbix-agent</code></p><h2 id="导入nginx监控模板"><a href="#导入nginx监控模板" class="headerlink" title="导入nginx监控模板"></a>导入nginx监控模板</h2><p><img src="/posts/4255676476/import1.png" alt="导入模板1"><br><a href="4255676476/zabbix_nginx.zip">nginx监控模板及脚本下载</a><br>下载模板文件并解压<br><img src="/posts/4255676476/import2.png" alt="导入模板2"><br>导入成功会在模板中显示“Template Nginx”模板，绑定到相应主机，nginx监控完成！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nginx开启监控模块&quot;&gt;&lt;a href=&quot;#nginx开启监控模块&quot; class=&quot;headerlink&quot; title=&quot;nginx开启监控模块&quot;&gt;&lt;/a&gt;nginx开启监控模块&lt;/h2&gt;&lt;p&gt;修改nginx的配置，在nginx配置的server域加入以下配置，
      
    
    </summary>
    
      <category term="zabbix" scheme="http://www.kapyan.top/categories/zabbix/"/>
    
    
      <category term="nginx监控" scheme="http://www.kapyan.top/tags/nginx%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>zabbix添加mysql监控</title>
    <link href="http://www.kapyan.top/posts/1388969176.html"/>
    <id>http://www.kapyan.top/posts/1388969176.html</id>
    <published>2019-01-19T07:31:34.000Z</published>
    <updated>2019-01-21T08:58:28.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编辑mysql监控脚本"><a href="#编辑mysql监控脚本" class="headerlink" title="编辑mysql监控脚本"></a>编辑mysql监控脚本</h2><p>在需要监控的mysql服务器上新建文件”/etc/zabbix/zabbix_agentd.d/mysql_monitor.sh”<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/zabbix/zabbix_agentd.d/mysql_monitor.sh</span><br></pre></td></tr></table></figure></p><p>加入以下內容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">mysqladmin_dir=<span class="string">"/usr/local/mysql/bin/mysqladmin_dir"</span>   <span class="comment">#mysqladmin的路径</span></span><br><span class="line">MYSQL_PWD=<span class="string">'mysqlpassword'</span><span class="comment">#mysql的root密碼</span></span><br><span class="line">ARGS=1</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne <span class="string">"<span class="variable">$ARGS</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Please input onearguement:"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        Uptime)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> status 2&gt;/dev/null |awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Questions)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> status 2&gt;/dev/null|awk <span class="string">'&#123;print $6&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Com_update)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Com_update"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Slow_queries)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Slow_queries"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Com_select)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Com_select"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Com_rollback)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Com_rollback"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Com_insert)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Com_insert"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Com_delete)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Com_delete"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Com_commit)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Com_commit"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Bytes_sent)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Bytes_sent"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Bytes_received)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Bytes_received"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">        Com_begin)</span><br><span class="line">                result=`<span class="variable">$mysqladmin_dir</span>  -uroot -p<span class="variable">$&#123;MYSQL_PWD&#125;</span> extended-status 2&gt;/dev/null|grep -w <span class="string">"Com_begin"</span>|awk <span class="string">'&#123;print $4&#125;'</span>`</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">                ;;</span><br><span class="line">                *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Usage:<span class="variable">$0</span> (Uptime|Questions|Com_update|Slow_queries|Com_select|Com_rollback|Com_insert|Com_delete|Com_commit|Bytes_sent|Bytes_received|Com_begin)"</span></span><br><span class="line">                ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 /etc/zabbix/zabbix_agentd.d/mysql_monitor.sh          <span class="comment">#授予mysql监控脚本执行权限</span></span><br><span class="line">chown zabbix:root /etc/zabbix/zabbix_agentd.d/mysql_monitor.sh          <span class="comment">#更改脚本属主为zabbix</span></span><br></pre></td></tr></table></figure><h2 id="编辑zabbix-agent配置"><a href="#编辑zabbix-agent配置" class="headerlink" title="编辑zabbix-agent配置"></a>编辑zabbix-agent配置</h2><p>在需要监控的mysql服务器上修改”/etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf”文件<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf</span><br></pre></td></tr></table></figure></p><p>添加如下配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=mysql.status[*],/etc/zabbix/zabbix_agentd.d/mysql_monitor.sh <span class="variable">$1</span></span><br></pre></td></tr></table></figure></p><p><img src="/posts/1388969176/conf.png" alt="配置"><br>重启zabbix-agent<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure></p><p>在zabbix服务端测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s 192.168.1.46 -k mysql.status[Uptime]      <span class="comment">#获取到数据说明监控脚本正常</span></span><br></pre></td></tr></table></figure></p><h2 id="绑定mysql监控模板"><a href="#绑定mysql监控模板" class="headerlink" title="绑定mysql监控模板"></a>绑定mysql监控模板</h2><p>zabbix自带了mysql监控模板，在zabbix web界面的相应主机上绑定“Template DB MySQL”模板</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;编辑mysql监控脚本&quot;&gt;&lt;a href=&quot;#编辑mysql监控脚本&quot; class=&quot;headerlink&quot; title=&quot;编辑mysql监控脚本&quot;&gt;&lt;/a&gt;编辑mysql监控脚本&lt;/h2&gt;&lt;p&gt;在需要监控的mysql服务器上新建文件”/etc/zabbix/za
      
    
    </summary>
    
      <category term="zabbix" scheme="http://www.kapyan.top/categories/zabbix/"/>
    
    
      <category term="mysql监控" scheme="http://www.kapyan.top/tags/mysql%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>mysql主主互备模式架构</title>
    <link href="http://www.kapyan.top/posts/1683246444.html"/>
    <id>http://www.kapyan.top/posts/1683246444.html</id>
    <published>2019-01-18T07:14:43.000Z</published>
    <updated>2019-01-19T08:09:09.572Z</updated>
    
    <content type="html"><![CDATA[<p>DB1和DB2互为主从，保证两台数据库始终是同步的，同时在DB1和DB2上还需要安装高可用软件Keepalived。正常情况下，web server主机仅从BD1进行数据的读、写操作，DB2只负责从DB1同步数据。而Keepalived维护着一个VIP,此ip用来对外提供连接服务，同时，Keepalived还负责监控DB1和DB2上mysql数据库的运行状态，当DB1主机出现故障或mysql运行异常时，自动将VIP地址和mysql服务切换到DB2上，此时web server主机继续从DB2进行数据的读、写操作。通过Keepalived保持了数据库服务的连续性，整个切换过程非常快，并且对前端web server主机是透明的。这种方式可以实现95.000%的SLA（服务水平协定）。<br><img src="/posts/1683246444/jiagou.png" alt="双主"></p><h2 id="修改mysql配置文件"><a href="#修改mysql配置文件" class="headerlink" title="修改mysql配置文件"></a>修改mysql配置文件</h2><p>   修改DB1主机的配置文件，在/etc/my.cnf文件中的”[mysqld]”段加如下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server-id = 1</span><br><span class="line"><span class="built_in">log</span>-bin = mysql-bin</span><br><span class="line">replicate-wild-ignore-table = mysql.%</span><br><span class="line">replicate-wild-ignore-table = <span class="built_in">test</span>.%</span><br><span class="line">replicate-wild-ignore-table = information_schema.%</span><br></pre></td></tr></table></figure></p><p>   修改DB2主机的配置文件，在/etc/my.cnf文件中的”[mysqld]”段加如下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server-id = 2</span><br><span class="line"><span class="built_in">log</span>-bin = mysql-bin</span><br><span class="line">relay-log = mysql-relay-bin</span><br><span class="line">replicate-wild-ignore-table = mysql.%</span><br><span class="line">replicate-wild-ignore-table = <span class="built_in">test</span>.%</span><br><span class="line">replicate-wild-ignore-table = information_schema.%</span><br></pre></td></tr></table></figure></p><p>重启DB1和DB2的mysql服务</p><h2 id="手动同步数据库："><a href="#手动同步数据库：" class="headerlink" title="手动同步数据库："></a>手动同步数据库：</h2><p>如果DB1上已经有mysql数据，在执行主主互备之前，需要将DB1和DB2上两个mysql数据保持一致</p><h2 id="创建复制用户并授权："><a href="#创建复制用户并授权：" class="headerlink" title="创建复制用户并授权："></a>创建复制用户并授权：</h2><p>在DB1中创建复制用户<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant replication slave on *.* to <span class="string">'repl_user'</span>@<span class="string">'192.168.88.12'</span> identified by <span class="string">'password'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">show master status;</span><br></pre></td></tr></table></figure></p><p><img src="/posts/1683246444/masterstatus.png" alt="主库状态"><br>在DB2的mysql库中将DB1设为自己主服务器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host=<span class="string">'192.168.88.11'</span>,master_port=3306,master_user=<span class="string">'repl_user'</span>, master_password=<span class="string">'123456'</span>,master_log_file=<span class="string">'mysql-bin.000028'</span>,master_log_pos=4264031;  <span class="comment">#将master_log_file的值替换为在DB1中执行"show master status"显示的File的值，将master_log_pos的值替换为Position的值</span></span><br></pre></td></tr></table></figure></p><p>在DB2上启动slave服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start slave;</span><br></pre></td></tr></table></figure></p><p>配置从DB2到DB1的mysql主从复制，这个配置过程与上面完全一样</p><p>在DB2上创建复制用户<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant replication slave on *.* to <span class="string">'repl_user'</span>@<span class="string">'192.168.88.11'</span> identified by <span class="string">'password'</span>;</span><br></pre></td></tr></table></figure></p><p>在DB1的mysql库中将DB2设为自己的主服务器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host=<span class="string">'192.168.88.12'</span>,master_port=3306,master_user=<span class="string">'repl_user'</span>, master_password=<span class="string">'123456'</span>,master_log_file=<span class="string">'mysql-bin.000028'</span>,master_log_pos=480; <span class="comment">#将master_log_file的值替换为在DB2中执行"show master status"显示的File的值，将master_log_pos的值替换为Position的值</span></span><br></pre></td></tr></table></figure></p><p>在DB1上启动slave服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start slave;</span><br><span class="line">show slave status\G <span class="comment">#在DB1和DB2执行</span></span><br></pre></td></tr></table></figure></p><p><img src="/posts/1683246444/slave.png" alt="从库状态"></p><h2 id="配置Keepalived实现mysql双主高可用"><a href="#配置Keepalived实现mysql双主高可用" class="headerlink" title="配置Keepalived实现mysql双主高可用"></a>配置Keepalived实现mysql双主高可用</h2><p>在进行高可用配置之前，需要在DB1和DB2服务器上安装Keepalived软件。DB1服务器上/etc/keepalived/keepalived.conf文件内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">global_defs&#123;</span><br><span class="line">notification_email&#123;</span><br><span class="line">acassen@firewall.loc</span><br><span class="line">failover@firewall.loc</span><br><span class="line">sysadmin@firewall.loc</span><br><span class="line">&#125;</span><br><span class="line">notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">smtp_server192.168.200.1</span><br><span class="line">smtp_connect_timeout 30</span><br><span class="line">router_id MySQLHA_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_mysqld &#123;</span><br><span class="line">script <span class="string">"/etc/keepalived/mysqlcheck/check_slave.pl 127.0.0.1"</span><span class="comment">#检测mysql复制状态的脚本</span></span><br><span class="line">interval 2</span><br><span class="line">weight 21</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instanceHA_1&#123;</span><br><span class="line">stateBACKUP<span class="comment">#在DB1和DB2上均配置为BACKUP</span></span><br><span class="line">interface eth0</span><br><span class="line">virtual_router_id80</span><br><span class="line">priority100</span><br><span class="line">advert_int2</span><br><span class="line">nopreempt<span class="comment">#不抢占模式，只在优先级高的机器上设置，优先级低的机器不可设置</span></span><br><span class="line"></span><br><span class="line">authentication&#123;</span><br><span class="line">auth_typePASS</span><br><span class="line">auth_passqweasdzxc</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">track_script&#123;</span><br><span class="line">check_mysqld</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_ipaddress&#123;</span><br><span class="line">192.168.88.10/24dev eth0<span class="comment">#mysql的对外服务ip,即VIP</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中，check_slave.pl文件内容为<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl -w</span></span><br><span class="line"><span class="keyword">use</span> DBI;</span><br><span class="line"><span class="keyword">use</span> DBD::mysql;</span><br><span class="line"></span><br><span class="line"><span class="comment"># CONFIG VARIABLES</span></span><br><span class="line">$SBM = <span class="number">120</span>;</span><br><span class="line">$db = <span class="string">"aaa"</span>;</span><br><span class="line">$host = $ARGV[<span class="number">0</span>];</span><br><span class="line">$port = <span class="number">3306</span>;</span><br><span class="line">$user = <span class="string">'root'</span>;</span><br><span class="line">$pw = <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># SQL query</span></span><br><span class="line">$query = <span class="string">"show slave status"</span>;</span><br><span class="line"></span><br><span class="line">$dbh = DBI-&gt;<span class="keyword">connect</span>(<span class="string">"DBI:mysql:$db:$host:$port"</span>, $user, $pw, &#123; <span class="string">RaiseError =&gt;</span> <span class="number">0</span>,<span class="string">PrintError =&gt;</span> <span class="number">0</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">defined</span>($dbh))     &#123;</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$sqlQuery = $dbh-&gt;prepare($query);</span><br><span class="line">$sqlQuery-&gt;execute;</span><br><span class="line">$Slave_IO_Running = <span class="string">""</span>;</span><br><span class="line">$Slave_SQL_Running = <span class="string">""</span>;</span><br><span class="line">$Seconds_Behind_Master = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">my</span> $ref = $sqlQuery-&gt;fetchrow_hashref()) &#123;</span><br><span class="line">        $Slave_IO_Running = $ref-&gt;&#123;<span class="string">'Slave_IO_Running'</span>&#125;;</span><br><span class="line">        $Slave_SQL_Running = $ref-&gt;&#123;<span class="string">'Slave_SQL_Running'</span>&#125;;</span><br><span class="line">        $Seconds_Behind_Master = $ref-&gt;&#123;<span class="string">'Seconds_Behind_Master'</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$sqlQuery-&gt;finish;</span><br><span class="line">$dbh-&gt;disconnect();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( $Slave_IO_Running eq <span class="string">"No"</span>  || $Slave_SQL_Running eq <span class="string">"No"</span> ) &#123;</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( $Seconds_Behind_Master &gt; $SBM ) &#123;</span><br><span class="line">                <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">        &#125;       <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">exit</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="安装per连接数据库驱动"><a href="#安装per连接数据库驱动" class="headerlink" title="安装per连接数据库驱动"></a>安装per连接数据库驱动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install perl-DBD-MySQL <span class="comment">#安装per连接数据库驱动</span></span><br></pre></td></tr></table></figure><p>这是用perl写的检测mysql复制状态的脚本，只需修改文件中mysql数据库的数据库、端口，用户名密码即可直接使用，但在使用前要保证此脚本有可执行权限。<br>接着将Keepalived.conf文件和check_slave.pl文件复制到DB2服务器上的对应位置，将Keepalived.conf文件中priority值修改为90，由于配置的不是抢占模式，因此，还需要去掉nopreempt选项。在完成所有配置后，分别在DB1和DB2上启动Keepalived服务，在正常情况下VIP地址应该运行在DB1服务器上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;DB1和DB2互为主从，保证两台数据库始终是同步的，同时在DB1和DB2上还需要安装高可用软件Keepalived。正常情况下，web server主机仅从BD1进行数据的读、写操作，DB2只负责从DB1同步数据。而Keepalived维护着一个VIP,此ip用来对外提供连
      
    
    </summary>
    
      <category term="mysql" scheme="http://www.kapyan.top/categories/mysql/"/>
    
    
      <category term="mysql主主互备" scheme="http://www.kapyan.top/tags/mysql%E4%B8%BB%E4%B8%BB%E4%BA%92%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>centos7通过阿里源安装zabbix</title>
    <link href="http://www.kapyan.top/posts/1314989757.html"/>
    <id>http://www.kapyan.top/posts/1314989757.html</id>
    <published>2019-01-17T06:53:08.000Z</published>
    <updated>2019-01-19T08:10:17.819Z</updated>
    
    <content type="html"><![CDATA[<p>此安装方法适用于centos7.x系统，安装版本为zabbix4.2</p><h2 id="安装zabbix环境"><a href="#安装zabbix环境" class="headerlink" title="安装zabbix环境"></a>安装zabbix环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span>  -e <span class="string">"[zabbix]\nname=Zabbix Repository\nbaseurl=https://mirrors.aliyun.com/zabbix/zabbix/4.1/rhel/7/x86_64/\ngpgcheck=0\nenabled=1"</span> &gt;&gt;/etc/yum.repos.d/zabbix.repo  <span class="comment">#添加阿里镜像仓库zabbix的yum源</span></span><br><span class="line">yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-get zabbix-agent php-fpm</span><br></pre></td></tr></table></figure><p>可能会报错：Error: Package: zabbix-server-mysql-4.2.0-0.2alpha2.el7.x86_64 (zabbix)<br>           Requires: libiksemel.so.3()(64bit)<br><img src="/posts/1314989757/install_erro.png" alt="安装错误"><br>出现此错误则需要安装以下依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y iksemel fping libiksemel</span><br><span class="line"><span class="comment">#如果以上命令不能安装iksemel，可使用如下命令</span></span><br><span class="line">yum install -y gnutls</span><br><span class="line">rpm -ivh http://springdale.math.ias.edu/data/puias/unsupported/7/x86_64//iksemel-1.4-6.sdl7.x86_64.rpm</span><br></pre></td></tr></table></figure></p><h2 id="安装mysql并导入zabbix数据库"><a href="#安装mysql并导入zabbix数据库" class="headerlink" title="安装mysql并导入zabbix数据库"></a>安装mysql并导入zabbix数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm <span class="comment">#添加mysql源</span></span><br><span class="line">yum install -y  mysql-server<span class="comment">#安装后mysql的root密码为空，可自行设置</span></span><br><span class="line">systemctl start mysqld  <span class="comment">#启动mysql</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld <span class="comment">#加入开启自启动</span></span><br><span class="line">mysql -uroot  -e <span class="string">"create database zabbix character set utf8 collate utf8_bin;"</span><span class="comment">#创建zabbix数据库</span></span><br><span class="line">mysql -uroot  -e <span class="string">"grant all privileges on zabbix.* to zabbix@localhost identified by 'password';"</span><span class="comment">#将password改为自己的密码</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -ppassword zabbix  <span class="comment">#将password改为自己的密码</span></span><br><span class="line">sed -i <span class="string">'s#\# DBPassword=#DBPassword=password#g'</span> /etc/zabbix/zabbix_server.conf <span class="comment">#将password改为自己的密码</span></span><br></pre></td></tr></table></figure><h2 id="更改时区"><a href="#更改时区" class="headerlink" title="更改时区"></a>更改时区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s#\# php_value date.timezone Europe/Riga#php_value date.timezone Asia/Shanghai#g'</span> /etc/httpd/conf.d/zabbix.conf</span><br></pre></td></tr></table></figure><h2 id="启动zabbix"><a href="#启动zabbix" class="headerlink" title="启动zabbix"></a>启动zabbix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-server zabbix-agent httpd php-fpm</span><br><span class="line"> systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent httpd php-fpm  <span class="comment">#加入开机自启动</span></span><br></pre></td></tr></table></figure><p>访问<a href="http://your_ip/zabbix" target="_blank" rel="noopener">http://your_ip/zabbix</a><br><img src="/posts/1314989757/setup1.png" alt="安装1"><br><img src="/posts/1314989757/setup2.png" alt="安装2"><br><img src="/posts/1314989757/setup3.png" alt="安装3"><br>接着点击“Next step”和“Finish”,默认用户名:Admin，密码:zabbix</p><h2 id="更改中文并解决中文乱码"><a href="#更改中文并解决中文乱码" class="headerlink" title="更改中文并解决中文乱码"></a>更改中文并解决中文乱码</h2><p>修改语言为中文<br><img src="/posts/1314989757/zhongwen.png" alt="中文"><br><img src="/posts/1314989757/luanma.png" alt="乱码"><br>zabbix默认的字体会出现中文乱码，在windows系统中的C:\Windows\Fonts目录下选择支持中文的字体（如:’宋体’），上传至“/usr/share/zabbix/fonts”目录下，并将字体名称的大写改为小写，否则不识别，执行如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;s#graphfont#fontname#g&apos; /usr/share/zabbix/include/defines.inc.php  #fontname为替换字体的名称，不需要后缀</span><br></pre></td></tr></table></figure></p><p>刷新zabbix页面,中文字体显示正常</p><h2 id="为zabbix设置域名和路径"><a href="#为zabbix设置域名和路径" class="headerlink" title="为zabbix设置域名和路径"></a>为zabbix设置域名和路径</h2><p>设置域名，编辑/etc/httpd/conf/httpd.conf<br><img src="/posts/1314989757/domain.png" alt="域名"><br>自定义路径，编辑/etc/httpd/conf.d/zabbix.conf<br><img src="/posts/1314989757/lujing.png" alt="路径"><br>重启httpd服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure></p><h2 id="zabbix4-2自动安装脚本"><a href="#zabbix4-2自动安装脚本" class="headerlink" title="zabbix4.2自动安装脚本"></a>zabbix4.2自动安装脚本</h2><h3 id="服务端安装脚本"><a href="#服务端安装脚本" class="headerlink" title="服务端安装脚本"></a>服务端安装脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"开始安装zabbix服务端..."</span></span><br><span class="line"><span class="comment">#添加zabbix安装源</span></span><br><span class="line"><span class="built_in">echo</span>  -e <span class="string">"[zabbix]\nname=Zabbix Repository\nbaseurl=https://mirrors.aliyun.com/zabbix/zabbix/4.1/rhel/7/x86_64/\ngpgcheck=0\nenabled=1"</span> &gt;&gt;/etc/yum.repos.d/zabbix.repo</span><br><span class="line"><span class="comment">#安装依赖</span></span><br><span class="line">yum install -y epel-release &amp;&amp; yum install -y fping</span><br><span class="line">yum install -y gnutls &amp;&amp; rpm -ivh http://springdale.math.ias.edu/data/puias/unsupported/7/x86_64//iksemel-1.4-6.sdl7.x86_64.rpm || <span class="built_in">exit</span> 1 </span><br><span class="line"><span class="comment">#安装zabbix相关服务</span></span><br><span class="line">yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-get zabbix-agent php-fpm || <span class="built_in">exit</span> 1</span><br><span class="line"><span class="comment">#安装mysql数据库</span></span><br><span class="line">rpm -ivh http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm &amp;&amp; yum install -y  mysql-server || <span class="built_in">exit</span> 1</span><br><span class="line">systemctl start mysqld &amp;&amp; systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line"><span class="comment">#创建zabbix数据库</span></span><br><span class="line">mysql -uroot  -e <span class="string">"create database zabbix character set utf8 collate utf8_bin;"</span> || <span class="built_in">exit</span> 1</span><br><span class="line"><span class="comment">#设置zabbix数据库密码，密码由时间戳MD5加密取前15个字符组成</span></span><br><span class="line">zabbixdb_pw=$(date +%s|md5sum|cut -c 1-15)</span><br><span class="line"><span class="comment">#创建zabbix数据库账号</span></span><br><span class="line">mysql -uroot  -e <span class="string">"grant all privileges on zabbix.* to zabbix@localhost identified by \"<span class="variable">$&#123;zabbixdb_pw&#125;</span>\";"</span> || <span class="built_in">exit</span> 1</span><br><span class="line"><span class="comment">#导入zabbix数据库</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p<span class="variable">$&#123;zabbixdb_pw&#125;</span> zabbix || <span class="built_in">exit</span> 1</span><br><span class="line"><span class="comment">#设置zabbix_server数据库密码</span></span><br><span class="line">sed -i <span class="string">"s#\# DBPassword=#DBPassword=<span class="variable">$&#123;zabbixdb_pw&#125;</span>#g"</span> /etc/zabbix/zabbix_server.conf</span><br><span class="line"><span class="comment">#设置时区为亚洲上海</span></span><br><span class="line">sed -i <span class="string">'s#\# php_value date.timezone Europe/Riga#php_value date.timezone Asia/Shanghai#g'</span> /etc/httpd/conf.d/zabbix.conf</span><br><span class="line"><span class="comment">#重启zabbix-server、agent、httpd、php服务并加入开机自启动</span></span><br><span class="line">systemctl restart zabbix-server zabbix-agent httpd php-fpm &amp;&amp; systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent httpd php-fpm</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"zabbix安装完成...\n请访问http://your_ip/zabbix并继续\nzabbix数据库密码：<span class="variable">$&#123;zabbixdb_pw&#125;</span> 请保存\nmysql的root密码为空，请自行设置"</span></span><br></pre></td></tr></table></figure><h3 id="客户端安装脚本"><a href="#客户端安装脚本" class="headerlink" title="客户端安装脚本"></a>客户端安装脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">server_ip=<span class="string">"your_server_ip"</span><span class="comment">#your_server_ip更改为自己的zabbix服务器地址</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"开始安装zabbix客户端..."</span></span><br><span class="line">rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/4.1/rhel/7/x86_64/zabbix-agent-4.2.0-0.1alpha1.el7.x86_64.rpm</span><br><span class="line">sed -i <span class="string">"s#Server=127.0.0.1#Server=<span class="variable">$&#123;server_ip&#125;</span>#g"</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">systemctl start zabbix-agent &amp;&amp; systemctl <span class="built_in">enable</span> zabbix-agent</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此安装方法适用于centos7.x系统，安装版本为zabbix4.2&lt;/p&gt;
&lt;h2 id=&quot;安装zabbix环境&quot;&gt;&lt;a href=&quot;#安装zabbix环境&quot; class=&quot;headerlink&quot; title=&quot;安装zabbix环境&quot;&gt;&lt;/a&gt;安装zabbix环境&lt;/h2
      
    
    </summary>
    
      <category term="zabbix" scheme="http://www.kapyan.top/categories/zabbix/"/>
    
    
      <category term="zabbix安装" scheme="http://www.kapyan.top/tags/zabbix%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>gitlab数据备份、还原、迁移</title>
    <link href="http://www.kapyan.top/posts/1095624551.html"/>
    <id>http://www.kapyan.top/posts/1095624551.html</id>
    <published>2019-01-14T03:23:20.000Z</published>
    <updated>2019-01-19T05:20:44.128Z</updated>
    
    <content type="html"><![CDATA[<h2 id="gitlab备份"><a href="#gitlab备份" class="headerlink" title="gitlab备份"></a>gitlab备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create </span><br><span class="line">docker <span class="built_in">exec</span> -i gitlab  gitlab-rake gitlab:backup:create<span class="comment">#docker环境中</span></span><br></pre></td></tr></table></figure><p>备份文件在/var/opt/gitlab/backups/目录下，文件格式为“时间戳_年_月_日_版本号_gitlab_backup.tar”<br>编辑/etc/gitlab/gitlab.rb文件中的“gitlab_rails[‘backup_path’] = ”参数可修改备份文件目录，需重新加载gitlab配置并重启</p><h2 id="gitlab还原"><a href="#gitlab还原" class="headerlink" title="gitlab还原"></a>gitlab还原</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#停止相关数据连接服务</span></span><br><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line"><span class="comment">#还原</span></span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=1547406063   <span class="comment">#还原1547406063_2019_01_13_11.5.4_gitlab_backup.tar文件，“BACKUP=”后跟还原文件的时间戳</span></span><br><span class="line">gitlab-ctl start  <span class="comment">#启动gitlab服务</span></span><br></pre></td></tr></table></figure><font color="red">注：不能直接在终端执行gitlab-ctl stop停止所有服务，因为gitlab删除和还原操作还需要使用到redis和postgresql连接。</font><h2 id="gitlab迁移"><a href="#gitlab迁移" class="headerlink" title="gitlab迁移"></a>gitlab迁移</h2><p>将备份的文件拷贝至新的gitlab对应的备份目录下，执行还原的步骤。</p><font color="red"> 新gitlab版本需要和原有版本一致，否则可能迁移失败！<br>复制备份过程可能导致属组和属主发生变化，需要修改所有者为git</font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;gitlab备份&quot;&gt;&lt;a href=&quot;#gitlab备份&quot; class=&quot;headerlink&quot; title=&quot;gitlab备份&quot;&gt;&lt;/a&gt;gitlab备份&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="gitlab" scheme="http://www.kapyan.top/categories/gitlab/"/>
    
    
      <category term="gitlab" scheme="http://www.kapyan.top/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>gitlab安装</title>
    <link href="http://www.kapyan.top/posts/4024240644.html"/>
    <id>http://www.kapyan.top/posts/4024240644.html</id>
    <published>2019-01-09T05:13:29.000Z</published>
    <updated>2019-01-19T08:07:03.508Z</updated>
    
    <content type="html"><![CDATA[<h3 id="脚本快速安装"><a href="#脚本快速安装" class="headerlink" title="脚本快速安装"></a>脚本快速安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash<span class="comment">#deb</span></span><br><span class="line">curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash<span class="comment">#rpm</span></span><br><span class="line">curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.node.sh | bash<span class="comment">#node</span></span><br><span class="line">curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.python.sh | bash <span class="comment">#python</span></span><br><span class="line">curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.gem.sh | bash <span class="comment">#gem(ruby)</span></span><br></pre></td></tr></table></figure><p>访问gitlab地址：<a href="http://your_host_ip" target="_blank" rel="noopener">http://your_host_ip</a></p><h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-zhangjiakou.aliyuncs.com/kapyan/gitlab:11.5.4</span><br><span class="line">docker run --detach \</span><br><span class="line">    --hostname 192.168.1.208:8000 \</span><br><span class="line">    --publish 10000:443 --publish 8000:8000 --publish 20000:22 \</span><br><span class="line">    --name gitlab \</span><br><span class="line">    --restart always \</span><br><span class="line">    --volume /home/gitlab/config:/etc/gitlab \</span><br><span class="line">    --volume /home/gitlab/logs:/var/<span class="built_in">log</span>/gitlab \</span><br><span class="line">    --volume /home/gitlab/data:/var/opt/gitlab \</span><br><span class="line">    gitlab <span class="comment">#运行容器</span></span><br></pre></td></tr></table></figure><p>docker exec -it gitlab /bin/bash  #进入容器<br>vim /etc/gitlab/gitlab.rb<br><img src="/posts/4024240644/sshport.png" alt="修改ssh端口号"><br>gitlab-ctl reconfigure    #重新加载gitlab配置<br>gitlab-ctl restart        #重启gitlab<br>访问gitlab地址：<a href="http://your_host_ip:8000" target="_blank" rel="noopener">http://your_host_ip:8000</a><br><a href="https://packages.gitlab.com/gitlab/gitlab-ce" target="_blank" rel="noopener">官方安装包</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;脚本快速安装&quot;&gt;&lt;a href=&quot;#脚本快速安装&quot; class=&quot;headerlink&quot; title=&quot;脚本快速安装&quot;&gt;&lt;/a&gt;脚本快速安装&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
      <category term="gitlab" scheme="http://www.kapyan.top/categories/gitlab/"/>
    
    
      <category term="gitlab" scheme="http://www.kapyan.top/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>nginx安装</title>
    <link href="http://www.kapyan.top/posts/385762059.html"/>
    <id>http://www.kapyan.top/posts/385762059.html</id>
    <published>2019-01-05T07:16:53.000Z</published>
    <updated>2019-01-22T03:04:38.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通过存储库安装nginx"><a href="#通过存储库安装nginx" class="headerlink" title="通过存储库安装nginx"></a>通过存储库安装nginx</h2><p>CentOS 6.x系统：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/6/<span class="variable">$(uname -m)</span>/\ngpgcheck=0\nenabled=1"</span>&gt;&gt;/etc/yum.repos.d/nginx.repo</span><br><span class="line">yum install -y nginx</span><br><span class="line">chkconfig nginx on <span class="comment">#设置开机自启动</span></span><br></pre></td></tr></table></figure></p><p>CentOS 7.x系统：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/7/<span class="variable">$(uname -m)</span>/\ngpgcheck=0\nenabled=1"</span>&gt;&gt;/etc/yum.repos.d/nginx.repo</span><br><span class="line">yum install -y nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx  <span class="comment">#设置开机自启动</span></span><br></pre></td></tr></table></figure></p><p>ubuntu系统：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">echo</span> -e <span class="string">"deb http://nginx.org/packages/ubuntu/ codename nginx\ndeb-src http://nginx.org/packages/ubuntu/ codename nginx"</span>&gt;&gt;/etc/apt/sources.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx  <span class="comment">#设置开机自启动</span></span><br></pre></td></tr></table></figure></p><h2 id="源码编译安装nginx"><a href="#源码编译安装nginx" class="headerlink" title="源码编译安装nginx"></a>源码编译安装nginx</h2><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">nginx各版本源码包下载</a><br>以nginx-1.14.2为例：<br>Centos系统：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd -M -s /sbin/nologin www<span class="comment">#创建nginx运行用户</span></span><br><span class="line">yum -y install gcc pcre pcre-devel openssl openssl-devel zlib-devel gd gd-devel perl perl-ExtUtils-Embed <span class="comment">#安装依赖</span></span><br><span class="line">wget http://nginx.org/download/nginx-1.14.2.tar.gz<span class="comment">#下载nginx-1.14.2</span></span><br><span class="line">tar xf nginx-1.14.2.tar.gz <span class="comment">#解压nginx压缩包</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.14.2</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx-1.14.2 --user=www --group=www --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gzip_static_module --with-http_perl_module --with-mail --with-mail_ssl_module --with-http_stub_status_module <span class="comment">#设置编译参数</span></span><br><span class="line">make &amp;&amp; make install<span class="comment">#编译安装</span></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/nginx-1.14.2 /usr/<span class="built_in">local</span>/nginx  <span class="comment">#给nginx添加软连接</span></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/nginx/sbin/nginx /usr/<span class="built_in">local</span>/bin/nginx</span><br></pre></td></tr></table></figure></p><p>Ubuntu系统：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd -M -s /sbin/nologin www<span class="comment">#创建nginx运行用户</span></span><br><span class="line">apt-get install -y gcc libpcre3 libpcre3-dev zlib1g-dev libssl-dev libperl-dev build-essential openssl <span class="comment">#安装依赖</span></span><br><span class="line">wget http://nginx.org/download/nginx-1.14.2.tar.gz<span class="comment">#下载nginx-1.14.2</span></span><br><span class="line">tar xf nginx-1.14.2.tar.gz <span class="comment">#解压nginx压缩包</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.14.2</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx-1.14.2 --user=www --group=www --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gzip_static_module --with-http_perl_module --with-mail --with-mail_ssl_module --with-http_stub_status_module <span class="comment">#设置编译参数</span></span><br><span class="line">make &amp;&amp; make install<span class="comment">#编译安装</span></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/nginx-1.14.2 /usr/<span class="built_in">local</span>/nginx  <span class="comment">#给nginx添加软连接</span></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/nginx/sbin/nginx /usr/<span class="built_in">local</span>/bin/nginx</span><br></pre></td></tr></table></figure></p><div><div class="fold_hider"><div class="close hider_title">nginx官方启动脚本☞点击显/隐内容</div></div><div class="fold"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx - this script starts and stops the nginx daemon</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig:   - 85 15</span></span><br><span class="line"><span class="comment"># description:  NGINX is an HTTP(S) server, HTTP(S) reverse \</span></span><br><span class="line"><span class="comment">#               proxy and IMAP/POP3 proxy server</span></span><br><span class="line"><span class="comment"># processname: nginx</span></span><br><span class="line"><span class="comment"># config:      /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment"># config:      /etc/sysconfig/nginx</span></span><br><span class="line"><span class="comment"># pidfile:     /var/run/nginx.pid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line">[ <span class="string">"<span class="variable">$NETWORKING</span>"</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">nginx=<span class="string">"/usr/sbin/nginx"</span></span><br><span class="line">prog=$(basename <span class="variable">$nginx</span>)</span><br><span class="line"></span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/etc/nginx/nginx.conf"</span></span><br><span class="line"></span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">make_dirs</span></span>() &#123;</span><br><span class="line">   <span class="comment"># make required directories</span></span><br><span class="line">   user=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">"configure arguments:.*--user="</span> | sed <span class="string">'s/[^*]*--user=\([^ ]*\).*/\1/g'</span> -`</span><br><span class="line">   <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$user</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> [ -z <span class="string">"`grep <span class="variable">$user</span> /etc/passwd`"</span> ]; <span class="keyword">then</span></span><br><span class="line">         useradd -M -s /bin/nologin <span class="variable">$user</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">      options=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">'configure arguments:'</span>`</span><br><span class="line">      <span class="keyword">for</span> opt <span class="keyword">in</span> <span class="variable">$options</span>; <span class="keyword">do</span></span><br><span class="line">          <span class="keyword">if</span> [ `<span class="built_in">echo</span> <span class="variable">$opt</span> | grep <span class="string">'.*-temp-path'</span>` ]; <span class="keyword">then</span></span><br><span class="line">              value=`<span class="built_in">echo</span> <span class="variable">$opt</span> | cut -d <span class="string">"="</span> -f 2`</span><br><span class="line">              <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$value</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                  <span class="comment"># echo "creating" $value</span></span><br><span class="line">                  mkdir -p <span class="variable">$value</span> &amp;&amp; chown -R <span class="variable">$user</span> <span class="variable">$value</span></span><br><span class="line">              <span class="keyword">fi</span></span><br><span class="line">          <span class="keyword">fi</span></span><br><span class="line">       <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    [ -x <span class="variable">$nginx</span> ] || <span class="built_in">exit</span> 5</span><br><span class="line">    [ -f <span class="variable">$NGINX_CONF_FILE</span> ] || <span class="built_in">exit</span> 6</span><br><span class="line">    make_dirs</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></span><br><span class="line">    daemon <span class="variable">$nginx</span> -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">    retval=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; touch <span class="variable">$lockfile</span></span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></span><br><span class="line">    killproc <span class="variable">$prog</span> -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class="variable">$lockfile</span></span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123;</span><br><span class="line">    configtest || <span class="built_in">return</span> $?</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">    configtest || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></span><br><span class="line">    killproc <span class="variable">$nginx</span> -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">force_reload</span></span>() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123;</span><br><span class="line">  <span class="variable">$nginx</span> -t -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status</span></span>() &#123;</span><br><span class="line">    status <span class="variable">$prog</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status_q</span></span>() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 7</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></div></div><p><a href="https://www.nginx.com/resources/wiki/start/topics/examples/initscripts/" target="_blank" rel="noopener">官方启动脚本示例</a></p><h2 id="nginx编译参数详解"><a href="#nginx编译参数详解" class="headerlink" title="nginx编译参数详解"></a>nginx编译参数详解</h2><div><div class="fold_hider"><div class="close hider_title">nginx编译参数☞点击显/隐内容</div></div><div class="fold"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">--prefix=path  <span class="comment">#指定nginx安装路径，默认是/usr/local/nginx</span></span><br><span class="line">--sbin-path=path  <span class="comment">#指定二进制可执行文件路径，默认是prefix/sbin/nginx</span></span><br><span class="line">--modules-path=path <span class="comment">#指定modules路径，默认是prefix/modules</span></span><br><span class="line">--conf-path=path <span class="comment">#指定nginx配置文件路径，默认是prefix/conf/nginx.conf</span></span><br><span class="line">--error-log-path=path <span class="comment">#指定错误日志文件路径，默认是prefix/logs/error.log</span></span><br><span class="line">--pid-path=path <span class="comment">#设置nginx的pid文件路径，默认是prefix/logs/nginx.pid</span></span><br><span class="line">--lock-path=path  <span class="comment">#设置nginx的lock文件路径，默认是prefix/logs/nginx.lock，在nginx启动是创建，保证只有一个nginx服务运行</span></span><br><span class="line">--user=name <span class="comment">#设置nginx运行的用户，默认是nobody</span></span><br><span class="line">--group=name <span class="comment">#设置nginx运行的组</span></span><br><span class="line">--build=name <span class="comment">#设置nginx的编译的名字，建议忽略该选项</span></span><br><span class="line">--builddir=path <span class="comment">#设置nginx的编译目录，建议忽略该选项</span></span><br><span class="line">--with-select_module </span><br><span class="line">--without-select_module </span><br><span class="line"><span class="comment">#配置服务器的是否使用select轮询接口（该接口低效且有限制），如果系统不支持如kqueue, epoll, 或/dev/poll等机制，则会构建该模块，保持默认即可</span></span><br><span class="line">--with-poll_module</span><br><span class="line">--without-poll_module</span><br><span class="line"><span class="comment">#poll接口比select接口更加高效，但是同样有一定的socket数量的限制，推荐使用默认</span></span><br><span class="line">--with-threads<span class="comment">#允许使用线程池，默认开启</span></span><br><span class="line">--with-file-aio <span class="comment">#在FreeBSD和Linux系统中开启异步文件I/O，默认开启</span></span><br><span class="line">--with-http_ssl_module <span class="comment">#开启https协议支持，默认不构建，要求安装openssl openssl-devel依赖</span></span><br><span class="line">--with-http_v2_module <span class="comment">#开启http/2协议支持，默认不构建</span></span><br><span class="line">--with-http_realip_module<span class="comment">#该模块可将客户端地址更改为在指定的头字段中发送的地址，默认不构建</span></span><br><span class="line">--with-http_addition_module <span class="comment">#该模块在响应之前和之后添加文本，默认不构建</span></span><br><span class="line">--with-http_xslt_module  <span class="comment">#</span></span><br><span class="line">--with-http_xslt_module=dynamic</span><br><span class="line"><span class="comment">#允许构建使用一个或多个XSLT样式表转换XML响应，默认不构建，需要安装libxml2和libxslt库</span></span><br><span class="line">--with-http_image_filter_module</span><br><span class="line">--with-http_image_filter_module=dynamic</span><br><span class="line"><span class="comment">#图像过滤器模块，可以转换JPEG、GIF、PNG和WebP格式的图像，默认不构建模块，该模块依赖libgd库，建议使用最新版本的库</span></span><br><span class="line">--with-http_geoip_module</span><br><span class="line">--with-http_geoip_module=dynamic</span><br><span class="line"><span class="comment">#使用预编译的MaxMind数据库创建具有取决于客户端IP地址的值得变量，该模块依赖MaxMind GeoIP 库，默认不构建</span></span><br><span class="line">--with-http_sub_module</span><br><span class="line"><span class="comment">#该模块通过一个指定的字符串替换为另一个字符串来修改响应，默认不构建</span></span><br><span class="line">--with-http_dav_module <span class="comment">#通过WebDAV协议进行文件管理自动化，默认不构建</span></span><br><span class="line">--with-http_flv_module <span class="comment">#为Flash Video(flv)文件提供伪流服务器端支持，默认不构建</span></span><br><span class="line">--with-http_mp4_module <span class="comment">#为MP4文件提供伪流服务器端支持，默认不构建</span></span><br><span class="line">--with-http_gunzip_module <span class="comment">#用于不支持gzip编码方法的客户端，默认不构建</span></span><br><span class="line">--with-http_gzip_static_module<span class="comment">#允许使用.gz文件扩展名发送预压缩文件，默认不构建</span></span><br><span class="line">--with-http_auth_request_module <span class="comment">#基于子请求的结果实现客户端授权，默认不构建</span></span><br><span class="line">--with-http_random_index_module <span class="comment">#处理以斜杠（“/”）结尾的请求，并选择目录中的随机文件作为索引文件，默认不构建</span></span><br><span class="line">--with-http_secure_link_module<span class="comment">#用于检查请求链路的真实性，保护资源免受未经授权的访问，并限制链路生存期，默认不构建</span></span><br><span class="line">--with-http_degradation_module  <span class="comment">#开启ngx_http_degradation_module，默认不构建</span></span><br><span class="line">--with-http_slice_module <span class="comment">#此模块可将请求拆分为子请求，每个子请求都返回一定范围的响应，默认不构建</span></span><br><span class="line">--with-http_stub_status_module <span class="comment">#此模块提供对基本状态信息的访问，默认不构建</span></span><br><span class="line">--without-http_charset_module  <span class="comment">#该模块将指定的字符集添加到“Content-Type”响应头字段，还可以将数据从一个字符集转换为另一个字符集，此参数将取消该模块</span></span><br><span class="line">--without-http_gzip_module<span class="comment">#禁用文件压缩模块</span></span><br><span class="line">--without-http_ssi_module <span class="comment">#禁用该模块，该模块在通过它的响应中处理SSI(服务器端包含)命令</span></span><br><span class="line">--without-http_userid_module <span class="comment">#禁用该模块，该模块设置适合客户端识别的cookie</span></span><br><span class="line">--without-http_access_module <span class="comment">#禁用该模块，该模块允许限制对某些客户端地址的访问</span></span><br><span class="line">--without-http_auth_basic_module <span class="comment">#禁用该模块，该模块允许通过使用“HTTP基本身份验证”协议验证用户名和密码来限制对资源的访问</span></span><br><span class="line">--without-http_mirror_module <span class="comment">#禁用该模块，该模块通过创建后台镜像子请求来实现原始请求的镜像</span></span><br><span class="line">--without-http_autoindex_module  <span class="comment">#禁用该模块，该模块处理以斜杠（“/”）结尾的请求，并在ngx_http_index_module模块找不到索引文件的情况下生成目录列表</span></span><br><span class="line">--without-http_geo_module <span class="comment">#禁用该模块，该模块使用取决于客户端IP地址的值创建变量</span></span><br><span class="line">--without-http_map_module  <span class="comment">#禁用该模块，该模块创建的变量值取决于其他变量的值</span></span><br><span class="line">--without-http_split_clients_module <span class="comment">#禁用该模块，该模块适用于A/B测试的变量，也称为拆分测试</span></span><br><span class="line">--without-http_referer_module <span class="comment">#禁用该模块，该模块用于阻止对“referer”头字段中具有无效值的请求访问站点</span></span><br><span class="line">--without-http_rewrite_module  <span class="comment">#禁用该模块，该模块用于请求重定向，依赖PCRE库</span></span><br><span class="line">--without-http_proxy_module   <span class="comment">#禁用该模块，该模块用于http代理服务</span></span><br><span class="line">--without-http_fastcgi_module<span class="comment">#禁用将请求传给FastCGI服务器的模块</span></span><br><span class="line">--without-http_uwsgi_module <span class="comment">#禁用将请求传给uwsgi服务器的模块</span></span><br><span class="line">--without-http_scgi_module <span class="comment">#禁用将请求传给SCGI服务器的模块</span></span><br><span class="line">--without-http_grpc_module <span class="comment">#禁用将请求传给GRPC服务器的模块</span></span><br><span class="line">--without-http_memcached_module <span class="comment">#禁止该模块，该模块从memcached服务器获取响应</span></span><br><span class="line">--without-http_limit_conn_module <span class="comment">#禁止该模块，该模块用于限制每个定义密钥的连接数，例如来自单个ip地址的连接数</span></span><br><span class="line">--without-http_limit_req_module <span class="comment">#禁止该模块，该模块用于限制每个定义密钥的请求处理数速率，例如来自单个ip地址的请求处理速率</span></span><br><span class="line">--without-http_empty_gif_module  <span class="comment">#禁止该模块，该模块用于发出单像素透明的GIF</span></span><br><span class="line">--without-http_browser_module  <span class="comment">#禁用该模块，该模块创建的变量的值取决于User-Agent请求标头字段的值</span></span><br><span class="line">--without-http_upstream_hash_module  <span class="comment">#禁用该模块，该模块用于负载均衡的hash算法</span></span><br><span class="line">--without-http_upstream_ip_hash_module <span class="comment">#禁用该模块，该模块用于负载均衡的ip_hash算法</span></span><br><span class="line">--without-http_upstream_keepalive_module <span class="comment">#禁用该模块，该模块提供上游服务器的连接缓存</span></span><br><span class="line">--without-http_upstream_zone_module <span class="comment">#禁用该模块，该模块可以将上游组的运行时状态存储在共享内存区域中</span></span><br><span class="line">--with-http_perl_module</span><br><span class="line">--with-http_perl_module=dynamic</span><br><span class="line"><span class="comment">#用于在perl中实现位置和变量处理程序，并将perl调用插入到SSI中，依赖perl5.6.1或更高版本，默认不构建</span></span><br><span class="line">--with-perl_modules_path=path <span class="comment">#设置perl_modules模块保存目录</span></span><br><span class="line">--with-perl=path <span class="comment">#设置perl所在路径</span></span><br><span class="line">--http-log-path=path <span class="comment">#设置访问日志路径，默认是 prefix/logs/access.log</span></span><br><span class="line">--http-client-body-temp-path=path <span class="comment">#设置存储客户端请求主体的临时文件目录，默认是prefix/client_body_temp</span></span><br><span class="line">--http-proxy-temp-path=path <span class="comment">#设置存储临时文件和从代理服务器接收的数据目录，默认是prefix/proxy_temp.</span></span><br><span class="line">--http-fastcgi-temp-path=path <span class="comment">#设置存储从FastCGI服务器接收的数据的临时文件目录，默认prefix/fastcgi_temp</span></span><br><span class="line">--http-uwsgi-temp-path=path <span class="comment">#设置存储从uwsgi服务器接收的数据的临时文件目录，默认prefix/uwsgi_temp</span></span><br><span class="line">--http-scgi-temp-path=path <span class="comment">##设置存储从scgi服务器接收的数据的临时文件目录，默认prefix/scgi_temp.</span></span><br><span class="line">--without-http <span class="comment">#禁用http服务</span></span><br><span class="line">--without-http-cache <span class="comment">#禁用http缓存</span></span><br><span class="line">--with-mail</span><br><span class="line">--with-mail=dynamic</span><br><span class="line"><span class="comment">#启用POP3/IMAP4/SMTP邮件代理服务器，默认不构建</span></span><br><span class="line">--with-mail_ssl_module <span class="comment">#为邮件代理服务器提供SSL/TLS协议支持，依赖OpenSSL库，默认不构建</span></span><br><span class="line">--without-mail_pop3_module <span class="comment">#禁止POP3邮件代理服务</span></span><br><span class="line">--without-mail_imap_module <span class="comment">#禁止IMAP邮件代理服务</span></span><br><span class="line">--without-mail_smtp_module <span class="comment">#禁止SMTP邮件代理服务</span></span><br><span class="line">--with-stream</span><br><span class="line">--with-stream=dynamic <span class="comment">#允许构建流模块以进行通用的TCP/UDP代理和负载均衡，默认不构建</span></span><br><span class="line">--with-stream_ssl_module <span class="comment">#为流模块提供SSL/TLS协议支持，依赖OpenSSL库，默认不构建</span></span><br><span class="line">--with-stream_realip_module <span class="comment">#该模块将客户端地址更改为proxy协议头中发送的地址，默认不构建</span></span><br><span class="line">--with-stream_geoip_module </span><br><span class="line">--with-stream_geoip_module=dynamic</span><br><span class="line"><span class="comment">#该模块根据客户端IP地址和预编译的MaxMind数据库创建变量，依赖MaxMind GeoIP库，默认不构建</span></span><br><span class="line">--with-stream_ssl_preread_module <span class="comment">#该模块允许从ClientHello消息中提取信息而不终止SSL/TLS，默认不构建</span></span><br><span class="line">--without-stream_limit_conn_module <span class="comment">#禁止该模块，该模块用于限制每个定义密钥的连接数，例如来自单个ip地址的连接数</span></span><br><span class="line">--without-stream_access_module <span class="comment">#禁止该模块，该模块用于限制对某些客户端地址的访问</span></span><br><span class="line">--without-stream_geo_module <span class="comment">#</span></span><br><span class="line">--without-stream_map_module</span><br><span class="line">--without-stream_split_clients_module</span><br><span class="line">--without-stream_return_module <span class="comment">#禁止该模块，该模块允许向客户端发送指定值，然后关闭连接</span></span><br><span class="line">--without-stream_upstream_hash_module</span><br><span class="line">--without-stream_upstream_least_conn_module</span><br><span class="line">--without-stream_upstream_zone_module</span><br><span class="line">--with-google_perftools_module <span class="comment">#该模块支持使用Google Performance Tools分析nginx工作进程，适用于nginx开发人员，依赖gperftools库默认不构建</span></span><br><span class="line">--with-cpp_test_module <span class="comment">#</span></span><br><span class="line">--add-module=path   <span class="comment">#加入第三方模块，path为 第三方模块路径</span></span><br><span class="line">--add-dynamic-module=path  <span class="comment">#动态加载第三方模块</span></span><br><span class="line">--with-compat<span class="comment">#启动动态模块兼容性</span></span><br><span class="line">--with-cc=path <span class="comment">#指定C编译器路径</span></span><br><span class="line">--with-cpp=path <span class="comment">#指定C预处理器路径</span></span><br><span class="line">--with-cc-opt=parameters <span class="comment">#设置将添加到CFLAGS变量的其他参数，在FreeBSD下使用系统PCRE库时，应指定--with-cc-opt="-I /usr/local/include"</span></span><br><span class="line">--with-ld-opt=parameters <span class="comment">#设置将在链接期间使用的其他参数，在FreeBSD下使用系统PCRE库时，应指定--with-ld-opt="-L /usr/local/lib"</span></span><br><span class="line">--with-cpu-opt=cpu <span class="comment">#设置cpu类型，如: pentium, pentiumpro, pentium3, pentium4, athlon, opteron, sparc32, sparc64, ppc64</span></span><br><span class="line">--without-pcre <span class="comment">#禁止使用PCRE库</span></span><br><span class="line">--with-pcre  <span class="comment">#强制使用PCRE库，PCRE库用于支持url重写和正则模块</span></span><br><span class="line">--with-pcre=path <span class="comment">#指定PCRE库的源码路径，nginx会自动编译</span></span><br><span class="line">--with-pcre-opt=parameters <span class="comment">#为PCRE设置其他参数</span></span><br><span class="line">--with-pcre-jit <span class="comment">#使用“即时编译”支持（1.1.12，pcre_jit指令）构建PCRE</span></span><br><span class="line">--with-zlib=path  <span class="comment">#指定zlib库的源码路径，nginx会自动编译，用于文件压缩</span></span><br><span class="line">--with-zlib-opt=parameters <span class="comment">#为zlib设置其他参数</span></span><br><span class="line">--with-zlib-asm=cpu <span class="comment">#允许使用针对其中一个指定CPU优化的zlib，例如：pentium, pentiumpro, pentium3, pentium4, athlon, opteron, sparc32, sparc64, ppc64</span></span><br><span class="line">--with-libatomic<span class="comment">#强制使用libatomic库</span></span><br><span class="line">--with-libatomic=path <span class="comment">#指定libatomic库的源码路径，nginx会自动编译</span></span><br><span class="line">--with-openssl=path <span class="comment">#指定openssl库的源码路径，nginx会自动编译</span></span><br><span class="line">--with-openssl-opt=parameters <span class="comment">#为openssl设置其他参数</span></span><br><span class="line">--with-debug <span class="comment">#启用调试日志</span></span><br></pre></td></tr></table></figure></div></div><h2 id="nginx配置详解"><a href="#nginx配置详解" class="headerlink" title="nginx配置详解"></a>nginx配置详解</h2><div><div class="fold_hider"><div class="close hider_title">nginx配置详解☞点击显/隐内容</div></div><div class="fold"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义Nginx运行的用户和用户组</span></span><br><span class="line">user www www;<span class="comment">#nginx进程数，建议设置为等于CPU总核心数。</span></span><br><span class="line">worker_processes 8;</span><br><span class="line">error_log /var/<span class="built_in">log</span>/nginx/error.log error;<span class="comment">#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]</span></span><br><span class="line">pid /var/run/nginx.pid;<span class="comment">#进程文件</span></span><br><span class="line"><span class="comment">#一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（系统的值ulimit -n）与nginx进程数相除，但是nginx分配请求并不均匀，所以建议与ulimit -n的值保持一致。</span></span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line"></span><br><span class="line"><span class="comment">#工作模式与连接数上限</span></span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">#参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型，如果跑在FreeBSD上面，就用kqueue模型。</span></span><br><span class="line">use epoll;</span><br><span class="line"><span class="comment">#单个进程最大连接数（最大连接数=连接数*进程数）</span></span><br><span class="line">worker_connections 65535;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设定http服务器</span></span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line">include mime.types; <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line">default_type application/octet-stream; <span class="comment">#默认文件类型</span></span><br><span class="line">charset utf-8; <span class="comment">#默认编码</span></span><br><span class="line">server_names_hash_bucket_size 128; <span class="comment">#服务器名字的hash表大小</span></span><br><span class="line">client_header_buffer_size 32k; <span class="comment">#上传文件大小限制</span></span><br><span class="line">large_client_header_buffers 4 64k; <span class="comment">#设定请求缓存</span></span><br><span class="line">client_max_body_size 8m; <span class="comment">#设定客户端请求缓存</span></span><br><span class="line">sendfile on; <span class="comment">#开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。</span></span><br><span class="line">autoindex on; <span class="comment">#开启目录列表访问，合适下载服务器，默认关闭。</span></span><br><span class="line">tcp_nopush on; <span class="comment">#防止网络阻塞</span></span><br><span class="line">tcp_nodelay on; <span class="comment">#防止网络阻塞</span></span><br><span class="line">keepalive_timeout 120; <span class="comment">#长连接超时时间，单位是秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。</span></span><br><span class="line">fastcgi_connect_timeout 300;</span><br><span class="line">fastcgi_send_timeout 300;</span><br><span class="line">fastcgi_read_timeout 300;</span><br><span class="line">fastcgi_buffer_size 64k;</span><br><span class="line">fastcgi_buffers 4 64k;</span><br><span class="line">fastcgi_busy_buffers_size 128k;</span><br><span class="line">fastcgi_temp_file_write_size 128k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#gzip模块设置</span></span><br><span class="line">gzip on; <span class="comment">#开启gzip压缩输出</span></span><br><span class="line">gzip_min_length 1k; <span class="comment">#最小压缩文件大小</span></span><br><span class="line">gzip_buffers 4 16k; <span class="comment">#压缩缓冲区</span></span><br><span class="line">gzip_http_version 1.0; <span class="comment">#压缩版本（默认1.1，前端如果是squid2.5请使用1.0）</span></span><br><span class="line">gzip_comp_level 2; <span class="comment">#压缩等级</span></span><br><span class="line">gzip_types text/plain application/x-javascript text/css application/xml;</span><br><span class="line"><span class="comment">#压缩类型，默认就已经包含text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。</span></span><br><span class="line">gzip_vary on;</span><br><span class="line">limit_zone crawler <span class="variable">$binary_remote_addr</span> 10m; <span class="comment">#开启限制IP连接数的时候需要使用</span></span><br><span class="line"></span><br><span class="line">upstream blog.ha97.com &#123;</span><br><span class="line"><span class="comment">#upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。</span></span><br><span class="line">server 192.168.80.121:80 weight=3;</span><br><span class="line">server 192.168.80.122:80 weight=2;</span><br><span class="line">server 192.168.80.123:80 weight=3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#虚拟主机的配置</span></span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">#监听端口</span></span><br><span class="line">    listen 80;</span><br><span class="line">    <span class="comment">#域名可以有多个，用空格隔开</span></span><br><span class="line">    server_name www.aaa.com wwww.bbb.com;</span><br><span class="line">    index index.html index.htm index.php;</span><br><span class="line">    root html;<span class="comment">#站点根目录</span></span><br><span class="line">    location ~ .*\.(php|php5)?$</span><br><span class="line">    &#123;</span><br><span class="line">    fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">    fastcgi_index index.php;</span><br><span class="line">    include fastcgi.conf;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#图片缓存时间设置</span></span><br><span class="line">    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">    &#123;</span><br><span class="line">    expires 10d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#JS和CSS缓存时间设置</span></span><br><span class="line">    location ~ .*\.(js|css)?$</span><br><span class="line">    &#123;</span><br><span class="line">    expires 1h;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#日志格式设定</span></span><br><span class="line">    log_format access <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">    <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">    <span class="string">'"$http_user_agent" $http_x_forwarded_for'</span>;</span><br><span class="line">    <span class="comment">#定义本虚拟主机的访问日志</span></span><br><span class="line">    access_log /var/<span class="built_in">log</span>/nginx/access.log access;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#对 "/" 启用反向代理</span></span><br><span class="line">    location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:88;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="comment">#以下是一些反向代理的配置，可选。</span></span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    client_max_body_size 10m; <span class="comment">#允许客户端请求的最大单文件字节数</span></span><br><span class="line">    client_body_buffer_size 128k; <span class="comment">#缓冲区代理缓冲用户端请求的最大字节数，</span></span><br><span class="line">    proxy_connect_timeout 90; <span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">    proxy_send_timeout 90; <span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">    proxy_read_timeout 90; <span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">    proxy_buffer_size 4k; <span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">    proxy_buffers 4 32k; <span class="comment">#proxy_buffers缓冲区，网页平均在32k以下的设置</span></span><br><span class="line">    proxy_busy_buffers_size 64k; <span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">    proxy_temp_file_write_size 64k;</span><br><span class="line">    <span class="comment">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设定查看Nginx状态的地址</span></span><br><span class="line">    location /NginxStatus &#123;</span><br><span class="line">    stub_status on;</span><br><span class="line">    access_log on;</span><br><span class="line">    auth_basic <span class="string">"NginxStatus"</span>;</span><br><span class="line">    auth_basic_user_file conf/htpasswd;</span><br><span class="line">    <span class="comment">#htpasswd文件的内容可以用apache提供的htpasswd工具来产生。</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#本地动静分离反向代理配置</span></span><br><span class="line">    <span class="comment">#所有jsp的页面均交由tomcat或resin处理</span></span><br><span class="line">    location ~ .(jsp|jspx|<span class="keyword">do</span>)?$ &#123;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#所有静态文件由nginx直接读取不经过tomcat或resin</span></span><br><span class="line">    location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$</span><br><span class="line">    &#123; expires 15d; &#125;</span><br><span class="line">    location ~ .*.(js|css)?$</span><br><span class="line">    &#123; expires 1h; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;通过存储库安装nginx&quot;&gt;&lt;a href=&quot;#通过存储库安装nginx&quot; class=&quot;headerlink&quot; title=&quot;通过存储库安装nginx&quot;&gt;&lt;/a&gt;通过存储库安装nginx&lt;/h2&gt;&lt;p&gt;CentOS 6.x系统：&lt;br&gt;&lt;figure class
      
    
    </summary>
    
      <category term="nginx" scheme="http://www.kapyan.top/categories/nginx/"/>
    
    
      <category term="nginx" scheme="http://www.kapyan.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>gitlab个人的简单使用</title>
    <link href="http://www.kapyan.top/posts/3451632616.html"/>
    <id>http://www.kapyan.top/posts/3451632616.html</id>
    <published>2019-01-04T09:30:37.000Z</published>
    <updated>2019-01-19T08:06:07.755Z</updated>
    
    <content type="html"><![CDATA[<h2 id="个人设置"><a href="#个人设置" class="headerlink" title="个人设置"></a>个人设置</h2><p><img src="/posts/3451632616/setting.png" alt="个人设置"></p><h2 id="头像、语言设置"><a href="#头像、语言设置" class="headerlink" title="头像、语言设置"></a>头像、语言设置</h2><p><img src="/posts/3451632616/baseset.png" alt="头像、语言设置"></p><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><p><img src="/posts/3451632616/updatepassword.png" alt="修改密码"></p><h2 id="免密设置"><a href="#免密设置" class="headerlink" title="免密设置"></a>免密设置</h2><p><img src="/posts/3451632616/ssh.png" alt="免密设置"><br>添加公钥后可在操作git仓库时免去输入用户名、密码的步骤。<br>公钥获取：<br><code>windows系统：打开C:\用户\username\\.ssh\id_rsa.pub文件，将内容复制到填写公钥的位置，其中username为当前用户名，一般是administrator</code><br><code>linux系统：输入cat ~/.ssh/id_rsa.pub命令，将内容复制到填写公钥的位置。</code><br>如果没有id_rsa.pub文件，则需要创建秘钥，创建方法如下：<br><code>windows系统：按“win+R”键，输入“cmd”并回车打开cmd窗口，输入“ssh-keygen”，按三次回车键，创建完成</code><br><code>linux系统：在终端里输入“ssh-keygen”，按三次回车键，创建完成</code></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><img src="/posts/3451632616/newproject.png" alt="创建项目"><br><img src="/posts/3451632616/project.png" alt="创建项目"></p><h2 id="获取项目地址、下载项目"><a href="#获取项目地址、下载项目" class="headerlink" title="获取项目地址、下载项目"></a>获取项目地址、下载项目</h2><p><img src="/posts/3451632616/projectadd.png" alt="项目地址"><br><img src="/posts/3451632616/getproject.png" alt="项目地址"></p><h2 id="项目权限设置、添加项目成员"><a href="#项目权限设置、添加项目成员" class="headerlink" title="项目权限设置、添加项目成员"></a>项目权限设置、添加项目成员</h2><p><img src="/posts/3451632616/setproject.png" alt="项目权限设置"><br><img src="/posts/3451632616/projectmu.png" alt="添加项目成员"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;个人设置&quot;&gt;&lt;a href=&quot;#个人设置&quot; class=&quot;headerlink&quot; title=&quot;个人设置&quot;&gt;&lt;/a&gt;个人设置&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/posts/3451632616/setting.png&quot; alt=&quot;个人设置&quot;&gt;&lt;/p&gt;
&lt;h2 i
      
    
    </summary>
    
      <category term="gitlab" scheme="http://www.kapyan.top/categories/gitlab/"/>
    
    
      <category term="gitlab" scheme="http://www.kapyan.top/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>geoserver+postgresql搭建</title>
    <link href="http://www.kapyan.top/posts/2386358445.html"/>
    <id>http://www.kapyan.top/posts/2386358445.html</id>
    <published>2019-01-02T03:05:47.000Z</published>
    <updated>2019-01-19T05:20:44.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="geoserver简介"><a href="#geoserver简介" class="headerlink" title="geoserver简介:"></a><strong>geoserver简介:</strong></h2><p>&ensp;&ensp;&ensp;&ensp;Geoserver是一个功能齐全,遵循OGC开放标准的开源WFS-T和WMS服务器。利用Geoserver可以把数据作为maps/images来发布(利用WMS来实现)也可以直接发布实际的数据(利用WFS来实现),同时也提供了修改,删除和新增的功能(利用WFS-T)。它是开源的 ,允许用户查看和编辑地理数据。GeoServer 是符合OGC 规范的一个全功能的WFS-T 和WMS server。</p><h2 id="geoserver-postgresql环境搭建："><a href="#geoserver-postgresql环境搭建：" class="headerlink" title="geoserver+postgresql环境搭建："></a><strong>geoserver+postgresql环境搭建：</strong></h2><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a><strong>实验环境</strong></h3><ul><li>系统及版本：Ubuntu16.0.4</li><li>jdk版本：1.8.0</li><li>tomcat版本：8.5</li><li>geoserver版本：2.14.1</li><li>postgresql版本：9.6</li><li>postgis版本：2.5</li></ul><h3 id="开始搭建："><a href="#开始搭建：" class="headerlink" title="开始搭建："></a><strong>开始搭建：</strong></h3><h4 id="1-安装jdk1-8"><a href="#1-安装jdk1-8" class="headerlink" title="1. 安装jdk1.8"></a>1. 安装jdk1.8</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y openjdk-8-jdk</span><br></pre></td></tr></table></figure><h4 id="2-安装tomcat8-5"><a href="#2-安装tomcat8-5" class="headerlink" title="2. 安装tomcat8.5"></a>2. 安装tomcat8.5</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz<span class="comment">#下载Tomcat</span></span><br><span class="line">tar xf apache-tomcat-8.5.37.tar.gz -C /usr/<span class="built_in">local</span>/ &amp;&amp; mv /usr/<span class="built_in">local</span>/apache-tomcat-8.5.37 /usr/<span class="built_in">local</span>/tomcat    <span class="comment">#解压Tomcat至/usr/local/tomcat目录</span></span><br></pre></td></tr></table></figure><h4 id="3-安装geoserver"><a href="#3-安装geoserver" class="headerlink" title="3. 安装geoserver"></a>3. 安装geoserver</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://nchc.dl.sourceforge.net/project/geoserver/GeoServer/2.14.1/geoserver-2.14.1-war.zip<span class="comment">#下载geoserver2.14.1</span></span><br><span class="line">sudo unzip geoserver-2.14.1-war.zip &amp;&amp; sudo unzip -d  /usr/<span class="built_in">local</span>/tomcat/webapps/geoserver geoserver.war<span class="comment">#解压geoserver压缩包至/usr/local/tomcat/webapps/geoserver目录</span></span><br></pre></td></tr></table></figure><p><em>注：提示”unzip: command not found”，请使用sudo apt-get install -y zip 安装zip</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/tomcat/bin/startup.sh<span class="comment">#启动tomcat</span></span><br></pre></td></tr></table></figure></p><p>tomcat启动成功后，在浏览器打开<a href="http://host_ip:8080/geoserver" target="_blank" rel="noopener">http://host_ip:8080/geoserver</a>  访问geoserver服务<br>将host_ip替换为server的ip地址，默认用户名：admin 密码：geoserver</p><h4 id="4-安装postgresql-9-6和postgis-2-5"><a href="#4-安装postgresql-9-6和postgis-2-5" class="headerlink" title="4. 安装postgresql-9.6和postgis-2.5"></a>4. 安装postgresql-9.6和postgis-2.5</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">echo</span> <span class="string">'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main'</span>&gt;&gt;/etc/apt/sources.list.d/pgdg.list<span class="comment">#添加postgresql安装源</span></span><br><span class="line">sudo wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -<span class="comment">#导入存储库签名秘钥</span></span><br><span class="line">sudo apt-get update<span class="comment">#更新包列表</span></span><br><span class="line">sudo apt-get install -y postgresql-9.6<span class="comment">#安装postgresql9.6</span></span><br><span class="line">sudo apt-get install -y postgresql-9.6-postgis-2.5<span class="comment">#安装postgresql9.6对应的postgis扩展</span></span><br><span class="line">sudo service postgresql start <span class="comment">#启动postgresql服务</span></span><br></pre></td></tr></table></figure><p>至此geoserver+postgresql搭建完成！<br>参考资料：<a href="https://www.postgresql.org/download/linux/ubuntu/" target="_blank" rel="noopener">postgresql官方安装文档</a></p><h4 id="通过docker安装"><a href="#通过docker安装" class="headerlink" title="通过docker安装"></a>通过docker安装</h4><p>docker镜像地址：registry.cn-zhangjiakou.aliyuncs.com/kapyan/geoserver:2.14.1</p><p>说明：</p><ol><li>容器已集成geoserver的JDBC Image Mosaic、Vector Tiles扩展</li><li>GEOWEBCACHE_CACHE_DIR目录在/var/app/tomcat/webapps/ROOT/geo_web_cache_dir目录</li><li>postgresql远程连接已开启，用户名：wanshan 密码：wanshan@2018</li><li>可用中文字体：楷体、宋体、新宋体</li></ol><p>安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-zhangjiakou.aliyuncs.com/kapyan/geoserver:2.14.1</span><br><span class="line">docker run -it -d -p 80:8080 -p 5432:5432 --restart always --name geoserver -v /home/geoserver/data:/var/app/tomcat/webapps/ROOT/data/mydata -v /home/geoserver/geo_web_cache_dir:/var/app/tomcat/webapps/ROOT/geo_web_cache_dir  geoserver</span><br></pre></td></tr></table></figure></p><hr><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a><strong>FAQ</strong></h2><h3 id="添加nginx反向代理"><a href="#添加nginx反向代理" class="headerlink" title="添加nginx反向代理"></a>添加nginx反向代理</h3><p>在nginx添加以下host文件配置，并重启<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">server_name</span> domain_name;<span class="comment">#你的域名</span></span><br><span class="line">    <span class="attribute">listen</span>  <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Origin'</span> *;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Credentials'</span> <span class="string">'true'</span>;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Headers'</span> <span class="string">'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Requested-With'</span>;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Methods'</span> <span class="string">'GET,POST,OPTIONS'</span>;</span><br><span class="line">        <span class="comment">#配置跨域允许，防止程序调用geoserver被跨域拦截</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_pass</span>  http://localhost:8080;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="geoserver添加JDBC-Image-Mosaic扩展"><a href="#geoserver添加JDBC-Image-Mosaic扩展" class="headerlink" title="geoserver添加JDBC Image Mosaic扩展"></a>geoserver添加JDBC Image Mosaic扩展</h3><p>下载相应版本的JDBC Image Mosaic扩展并解压至geoserver所在目录的WEB-INF/lib/目录下<br><a href="http://geoserver.org/release/2.14.1/" target="_blank" rel="noopener">geoserver2.14.1及扩展下载地址</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://jaist.dl.sourceforge.net/project/geoserver/GeoServer/2.14.1/extensions/geoserver-2.14.1-imagemosaic-jdbc-plugin.zip<span class="comment">#下载JDBC Image Mosaic扩展</span></span><br><span class="line">unzip -d /usr/<span class="built_in">local</span>/tomcat/webapps/geoserver/WEB-INF/lib/ geoserver-2.14.1-imagemosaic-jdbc-plugin.zip<span class="comment">#解压至geoserver所在目录的WEB-INF/lib/目录下</span></span><br></pre></td></tr></table></figure></p><h3 id="geoserver添加Vector-Tiles扩展"><a href="#geoserver添加Vector-Tiles扩展" class="headerlink" title="geoserver添加Vector Tiles扩展"></a>geoserver添加Vector Tiles扩展</h3><p>下载相应版本的Vector Tiles扩展并解压至geoserver所在目录的WEB-INF/lib/目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://jaist.dl.sourceforge.net/project/geoserver/GeoServer/2.14.1/extensions/geoserver-2.14.1-vectortiles-plugin.zip    <span class="comment">#下载Vector Tiles扩展</span></span><br><span class="line">unzip -d /usr/<span class="built_in">local</span>/tomcat/webapps/geoserver/WEB-INF/lib/ geoserver-2.14.1-vectortiles-plugin.zip      <span class="comment">#解压至geoserver所在目录的WEB-INF/lib/目录下</span></span><br></pre></td></tr></table></figure></p><p>编辑geoserver所在目录的/WEB-INF/web.xml文件，在第4行下添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--切片缓存目录--&gt;</span><br><span class="line">&lt;context-param&gt;</span><br><span class="line">    &lt;param-name&gt;GEOWEBCACHE_CACHE_DIR&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;/usr/local/tomcat/webapps/geoserver/geo_web_cache_dir&lt;/param-value&gt;</span><br><span class="line">&lt;/context-param&gt;</span><br></pre></td></tr></table></figure></p><p>然后重启tomcat<br> 注：“/usr/local/tomcat/webapps/geoserver/geo_web_cache_dir”替换为自定义目录</p><h3 id="geoserver开启jsonp"><a href="#geoserver开启jsonp" class="headerlink" title="geoserver开启jsonp"></a>geoserver开启jsonp</h3><p>编辑geoserver所在目录的/WEB-INF/web.xml文件，去掉以下注释：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">43   &lt;!--&lt;context-param&gt;</span><br><span class="line">44     &lt;param-name&gt;ENABLE_JSONP&lt;/param-name&gt;</span><br><span class="line">45     &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">46     &lt;/context-param&gt;--&gt;</span><br></pre></td></tr></table></figure></p><p>改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">43   &lt;context-param&gt;</span><br><span class="line">44     &lt;param-name&gt;ENABLE_JSONP&lt;/param-name&gt;</span><br><span class="line">45     &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">46   &lt;/context-param&gt;</span><br></pre></td></tr></table></figure></p><h3 id="postgresql开启远程连接"><a href="#postgresql开启远程连接" class="headerlink" title="postgresql开启远程连接"></a>postgresql开启远程连接</h3><p>1.修改/etc/postgresql/9.6/main/postgresql.conf第59行：</p><pre><code>#listen_addresses = &apos;localhost&apos;  为    listen_addresses = &apos;*&apos;</code></pre><p>2.在/etc/postgresql/9.6/main/pg_hba.conf的</p><pre><code># IPv4 local connections:host all all 127.0.0.1/32 md5 后添加一行：host all all 0.0.0.0/0 md5</code></pre><p>注：0.0.0.0/0代码允许所有网段访问，也可指定特定网段，如192.168.1.0/24</p><h3 id="postgresql创建超级用户"><a href="#postgresql创建超级用户" class="headerlink" title="postgresql创建超级用户"></a>postgresql创建超级用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su postgres <span class="comment">#切换至postgres用户</span></span><br><span class="line">psql <span class="comment">#进入postgresql</span></span><br><span class="line">CREATE ROLE <span class="built_in">test</span> superuser PASSWORD <span class="string">'123456'</span> login;<span class="comment">#创建名为test，密码为123456的超级用户</span></span><br><span class="line">\du <span class="comment">#查看所有用户</span></span><br></pre></td></tr></table></figure><h3 id="为数据库添加postgis空间数据库扩展"><a href="#为数据库添加postgis空间数据库扩展" class="headerlink" title="为数据库添加postgis空间数据库扩展"></a>为数据库添加postgis空间数据库扩展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">su postgres <span class="comment">#切换至postgres用户</span></span><br><span class="line">psql -d yourdatabase -c <span class="string">"CREATE EXTENSION postgis;"</span></span><br><span class="line">psql -d yourdatabase -c <span class="string">"CREATE EXTENSION postgis_topology;"</span></span><br><span class="line">psql -d yourdatabase -c <span class="string">"CREATE EXTENSION postgis_sfcgal;"</span></span><br><span class="line">psql -d yourdatabase -c <span class="string">"CREATE EXTENSION fuzzystrmatch;"</span></span><br><span class="line">psql -d yourdatabase -c <span class="string">"CREATE EXTENSION address_standardizer;"</span></span><br><span class="line">psql -d yourdatabase -c <span class="string">"CREATE EXTENSION address_standardizer_data_us;"</span></span><br><span class="line">psql -d yourdatabase -c <span class="string">"CREATE EXTENSION postgis_tiger_geocoder;"</span></span><br></pre></td></tr></table></figure><h3 id="GDAL-PostGIS-Raster-driver未找到"><a href="#GDAL-PostGIS-Raster-driver未找到" class="headerlink" title="GDAL PostGIS Raster driver未找到"></a>GDAL PostGIS Raster driver未找到</h3><p>从postgis2.1.3开始，默认禁用out-of-db rasters和所有raster驱动，启用他们需要在系统中设置环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"POSTGIS_GDAL_ENABLED_DRIVERS=ENABLE_ALL"</span>&gt;&gt; /etc/postgresql/9.6/main/environment<span class="comment">#添加环境变量</span></span><br><span class="line">service postgresql restart<span class="comment">#重启postgresql</span></span><br></pre></td></tr></table></figure></p><p>参考资料：<a href="http://postgis.net/docs/postgis_installation.html#install_short_version" target="_blank" rel="noopener">postgis官方安装文档</a></p><h3 id="中文字段乱码问题"><a href="#中文字段乱码问题" class="headerlink" title="中文字段乱码问题"></a>中文字段乱码问题</h3><ol><li>如果预览视图显示中文为“□□□□”，是因为系统中没有相应的字体，需要安装字体，可以在windows系统的C:\Windows\fonts目录下找到需要的字体，并上传至/usr/share/fonts/custom目录下（没有则新建custom目录），并在/usr/share/fonts/custom目录执行以下命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y font-manager <span class="comment">#安装字体管理工具</span></span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo mkfontdir</span><br><span class="line">sudo <span class="built_in">fc</span>-cache -fv   </span><br><span class="line">sudo <span class="built_in">fc</span>-list    <span class="comment">#查看已安装字体</span></span><br><span class="line">注：高版本系统可能没有mkfontscale命令，将字体所在路径加入/etc/fonts/fonts.conf文件的<span class="string">"&lt;dir&gt;your_fonts_path&lt;/dir&gt;"</span>即可</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li>如果xml的中文显示为’???’，是因为系统的默认编码可能不支持中文，如“POSIX”<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo locale<span class="comment">#查看当前系统编码</span></span><br><span class="line">sudo locale-a<span class="comment">#查看系统支持的所有编码</span></span><br><span class="line"><span class="built_in">export</span> LANG=<span class="string">"en_US.UTF-8"</span><span class="comment">#修改系统编码（临时修改，重启失效）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export LANG="en_US.UTF-8"'</span> &gt;&gt; /etc/profile <span class="comment">#修改系统编码（永久修改）</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;geoserver简介&quot;&gt;&lt;a href=&quot;#geoserver简介&quot; class=&quot;headerlink&quot; title=&quot;geoserver简介:&quot;&gt;&lt;/a&gt;&lt;strong&gt;geoserver简介:&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&amp;ensp;&amp;ensp;&amp;en
      
    
    </summary>
    
      <category term="geoserver" scheme="http://www.kapyan.top/categories/geoserver/"/>
    
    
      <category term="geoserver" scheme="http://www.kapyan.top/tags/geoserver/"/>
    
      <category term="postgresql" scheme="http://www.kapyan.top/tags/postgresql/"/>
    
  </entry>
  
</feed>
