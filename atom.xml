<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>运维之窗</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.kapyan.top/"/>
  <updated>2019-07-29T02:14:32.820Z</updated>
  <id>https://www.kapyan.top/</id>
  
  <author>
    <name>没有风的晴天</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>tigase8服务搭建</title>
    <link href="https://www.kapyan.top/posts/3413315135.html"/>
    <id>https://www.kapyan.top/posts/3413315135.html</id>
    <published>2019-07-26T07:23:34.000Z</published>
    <updated>2019-07-29T02:14:32.820Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ul>  <li>操作系统：ubuntu 16.04</li>  <li>tigase版本：8.0</li>  <li>数据库：Mariadb 10.0.38</li></ul><h2 id="tigase软件下载"><a href="#tigase软件下载" class="headerlink" title="tigase软件下载"></a>tigase软件下载</h2><p><a href="https://tigase.net/downloads">官网下载地址</a><br><a href="3413315135/tigase-server-8.0.0-b10083-dist-max.zip">本地下载：tigase-server-8.0.0-b10083-dist-max.zip</a></p><h2 id="tigase安装"><a href="#tigase安装" class="headerlink" title="tigase安装"></a>tigase安装</h2><h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y openjdk-8-jdk</span><br></pre></td></tr></table></figure><h3 id="安装Mariadb"><a href="#安装Mariadb" class="headerlink" title="安装Mariadb"></a>安装Mariadb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y mariadb-server</span><br><span class="line">systemctl start mysql</span><br><span class="line">mysql_secure_installation <span class="comment">#初始化数据库，设置数据库root密码等</span></span><br></pre></td></tr></table></figure><h3 id="解压tigase"><a href="#解压tigase" class="headerlink" title="解压tigase"></a>解压tigase</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unzip tigase-server-8.0.0-b10083-dist-max.zip</span><br><span class="line">mv tigase-server-8.0.0-b10083-dist-max /opt/tigase-server-8.0</span><br></pre></td></tr></table></figure><h3 id="添加jdk、tigase环境变量"><a href="#添加jdk、tigase环境变量" class="headerlink" title="添加jdk、tigase环境变量"></a>添加jdk、tigase环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"export TIGASE_HOME=/opt/tigase-server-8.0"</span> &gt;&gt;/etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64"</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="修改tigase配置"><a href="#修改tigase配置" class="headerlink" title="修改tigase配置"></a>修改tigase配置</h3><p>修改etc/tigase.conf文件，将#JAVA_HOME=”${JDKPath}”替换为JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64</p><h3 id="启动tigase"><a href="#启动tigase" class="headerlink" title="启动tigase"></a>启动tigase</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./scripts/tigase.sh start etc/tigase.conf</span><br></pre></td></tr></table></figure><h3 id="通过web配置tigase"><a href="#通过web配置tigase" class="headerlink" title="通过web配置tigase"></a>通过web配置tigase</h3><p>访问<a href="http://hostip:8080">http://hostip:8080</a><br>账号：admin 密码：tigase<br>根据页面说明一步步填写，最后重启服务。</p><h2 id="tigase8配置文件"><a href="#tigase8配置文件" class="headerlink" title="tigase8配置文件"></a>tigase8配置文件</h2><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><a href="https://docs.tigase.net/tigase-server/8.0.0/Administration_Guide/html/">官方文档</a></h3><p>tigase8采用了tdsl格式的配置文件，配置文件为etc/config.tdsl。</p><h3 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">admins = [ <span class="string">'admin@172.24.4.19'</span> ]</span><br><span class="line"><span class="string">'config-type'</span> = <span class="string">'default'</span></span><br><span class="line">debug = [ <span class="string">'server'</span> ]</span><br><span class="line"><span class="string">'default-virtual-host'</span> = <span class="string">'172.24.4.19'</span></span><br><span class="line"><span class="function"><span class="title">dataSource</span></span> () &#123;</span><br><span class="line">    <span class="function"><span class="title">default</span></span> () &#123;</span><br><span class="line">        uri = <span class="string">'jdbc:mysql://localhost/tigase8?user=tigase&amp;password=tigase&amp;useSSL=false&amp;useLegacyDatetimeCode=false&amp;allowPublicKeyRetrieval=true'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">bosh &#123;</span><br><span class="line">    <span class="string">'send-node-hostname'</span> = <span class="literal">false</span></span><br><span class="line">    seeOtherHost &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#修改http端口,绑定域名</span></span><br><span class="line">httpServer &#123;</span><br><span class="line">    connections &#123;</span><br><span class="line">        8080 (active: <span class="literal">false</span>) &#123;&#125;</span><br><span class="line">        <span class="function"><span class="title">443</span></span> () &#123;&#125;</span><br><span class="line">        socket = ssl</span><br><span class="line">        domain = <span class="string">'example.com'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#ssl证书</span></span><br><span class="line"><span class="string">'certificate-container'</span> &#123;</span><br><span class="line">    <span class="string">'custom-certificates'</span> &#123;</span><br><span class="line">        <span class="string">'*.example.net'</span> = <span class="string">'/home/tigase/certs/certificate.pem'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#api开启</span></span><br><span class="line"><span class="function"><span class="title">http</span></span> () &#123;</span><br><span class="line">   <span class="function"><span class="title">rest</span></span> () &#123;</span><br><span class="line">        <span class="string">'context-path'</span> = <span class="string">'/api'</span></span><br><span class="line">    &#125;</span><br><span class="line">    api-keys = [ <span class="string">'6200dc72-a5c8-41bf-9e28-684101805aa8'</span> ]</span><br><span class="line">    <span class="function"><span class="title">setup</span></span> () &#123;</span><br><span class="line">        <span class="string">'admin-password'</span> = <span class="string">'admin'</span></span><br><span class="line">        <span class="string">'admin-user'</span> = <span class="string">'admin'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#账户注册限制</span></span><br><span class="line"><span class="string">'registration-throttling'</span> () &#123;</span><br><span class="line">    <span class="built_in">limit</span> = 10</span><br><span class="line">&#125;</span><br><span class="line">c2s &#123;</span><br><span class="line">    <span class="string">'registration-throttling'</span> (class: tigase.server.xmppclient.RegistrationThrottling) &#123;</span><br><span class="line">        <span class="built_in">limit</span> = 3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">pubsub</span></span> () &#123;</span><br><span class="line">    trusted = [ <span class="string">'http@&#123;clusterNode&#125;'</span> ]</span><br><span class="line">    pubsub-high-memory-usage-level = 95</span><br><span class="line">    pubsub-low-memory-delay = 100</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#历史消息存储</span></span><br><span class="line"><span class="string">'message-archive'</span> &#123;</span><br><span class="line">    <span class="string">'archive-repo-uri'</span> = <span class="string">'jdbc:mysql://localhost/tigase8?user=tigase&amp;password=tigaset&amp;useUnicode=true&amp;characterEncoding=UTF-8'</span></span><br><span class="line">    <span class="string">'tags-support'</span> = <span class="literal">true</span></span><br><span class="line">    <span class="string">'pool-size'</span> = 15</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#群聊</span></span><br><span class="line">muc &#123;</span><br><span class="line">    <span class="string">'muc-lock-new-room'</span> = <span class="literal">false</span></span><br><span class="line">    <span class="string">'roomconfig_persistentroom'</span> = <span class="literal">true</span></span><br><span class="line">    <span class="string">'roomconfig_membersonly'</span> = <span class="literal">false</span></span><br><span class="line">    <span class="string">'maxhistoryfetch'</span> = 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">'sess-man'</span> &#123;</span><br><span class="line">    <span class="string">'message-archive'</span> &#123;</span><br><span class="line">        <span class="string">'default-store-method'</span> = <span class="string">'message'</span></span><br><span class="line">        <span class="string">'required-store-method'</span> = <span class="string">'body'</span></span><br><span class="line">        store-muc-messages = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#离线消息</span></span><br><span class="line">    <span class="function"><span class="title">amp</span></span> () &#123;</span><br><span class="line">    <span class="string">'store-limit'</span> = 200L</span><br><span class="line">    <span class="string">'user-store-limit-enable'</span> = <span class="literal">true</span></span><br><span class="line">    <span class="string">'quota-exceeded'</span> = <span class="string">'drop'</span></span><br><span class="line">    <span class="string">'msg-store-offline-paths'</span> = [<span class="string">'/message/received[urn:xmpp:receipts]'</span>, <span class="string">'/message/store-offline'</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;搭建环境&quot;&gt;&lt;a href=&quot;#搭建环境&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;操作系统：ubuntu 16.04&lt;/li&gt;
  &lt;li&gt;tigase版本：8.0&lt;/li&gt;
  &lt;li&gt;
      
    
    </summary>
    
      <category term="即时通讯" scheme="https://www.kapyan.top/categories/%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
    
    
      <category term="即时通讯" scheme="https://www.kapyan.top/tags/%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
    
  </entry>
  
  <entry>
    <title>Mongodb数据迁移</title>
    <link href="https://www.kapyan.top/posts/2435517302.html"/>
    <id>https://www.kapyan.top/posts/2435517302.html</id>
    <published>2019-07-09T06:14:49.000Z</published>
    <updated>2019-07-09T06:18:39.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mongodb同库之间表数据迁移"><a href="#mongodb同库之间表数据迁移" class="headerlink" title="mongodb同库之间表数据迁移"></a>mongodb同库之间表数据迁移</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongo 地址 -u用户名 -p密码</span><br><span class="line">use 数据库名；</span><br><span class="line">var docs = db.表名.find();</span><br><span class="line">use 数据库名;</span><br><span class="line">docs.forEach(<span class="keyword">function</span>(d)&#123;db.表名.insert(d)&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mongodb同库之间表数据迁移&quot;&gt;&lt;a href=&quot;#mongodb同库之间表数据迁移&quot; class=&quot;headerlink&quot; title=&quot;mongodb同库之间表数据迁移&quot;&gt;&lt;/a&gt;mongodb同库之间表数据迁移&lt;/h2&gt;
&lt;figure class=&quot;h
      
    
    </summary>
    
      <category term="Mongodb" scheme="https://www.kapyan.top/categories/Mongodb/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker Compose详解</title>
    <link href="https://www.kapyan.top/posts/2438769800.html"/>
    <id>https://www.kapyan.top/posts/2438769800.html</id>
    <published>2019-07-02T08:24:24.000Z</published>
    <updated>2019-07-03T00:33:00.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker-Compose简介"><a href="#Docker-Compose简介" class="headerlink" title="Docker Compose简介"></a>Docker  Compose简介</h2><p>使用Docker Compose可以轻松、高效的管理容器，它是一个用于定义和运行多容器Docker的应用程序工具。<br>Docker  Compose将所管理的容器分为三层：工程（project）、服务（service）、容器（contaniner）。<br>Docker  Compose运行目录下的所有文件（docker-compose.yml）组成一个工程，一个工程包含多个服务，每个服务中定义了容器运行的镜像、参数、依赖，一个服务可包括多个容器实例。</p><h2 id="安装Docker-Compose"><a href="#安装Docker-Compose" class="headerlink" title="安装Docker Compose"></a>安装Docker  Compose</h2><p><a href="2438769800/docker-compose-1.23.2">点击下载：docker-compose-1.23.2</a><br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">docker-compose -v <span class="comment">#查看版本</span></span><br></pre></td></tr></table></figure></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="列出所有运行容器"><a href="#列出所有运行容器" class="headerlink" title="列出所有运行容器"></a>列出所有运行容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose ps</span><br></pre></td></tr></table></figure><h3 id="查看服务日志输出"><a href="#查看服务日志输出" class="headerlink" title="查看服务日志输出"></a>查看服务日志输出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose logs</span><br></pre></td></tr></table></figure><h3 id="打印绑定的公共端口"><a href="#打印绑定的公共端口" class="headerlink" title="打印绑定的公共端口"></a>打印绑定的公共端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose port lnmp 80 <span class="comment">#打印lnmp服务80端口所绑定的公共端口</span></span><br></pre></td></tr></table></figure><h3 id="构建或重构服务"><a href="#构建或重构服务" class="headerlink" title="构建或重构服务"></a>构建或重构服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br></pre></td></tr></table></figure><h3 id="启动指定服务已存在的容器"><a href="#启动指定服务已存在的容器" class="headerlink" title="启动指定服务已存在的容器"></a>启动指定服务已存在的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose start lnmp</span><br></pre></td></tr></table></figure><h3 id="停止已运行的服务的容器"><a href="#停止已运行的服务的容器" class="headerlink" title="停止已运行的服务的容器"></a>停止已运行的服务的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose stop lnmp</span><br></pre></td></tr></table></figure><h3 id="删除指定服务的容器"><a href="#删除指定服务的容器" class="headerlink" title="删除指定服务的容器"></a>删除指定服务的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose rm lnmp</span><br></pre></td></tr></table></figure><h3 id="构建、启动容器"><a href="#构建、启动容器" class="headerlink" title="构建、启动容器"></a>构建、启动容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure><h3 id="通过发送SIGKILL信号来停止指定服务的容器"><a href="#通过发送SIGKILL信号来停止指定服务的容器" class="headerlink" title="通过发送SIGKILL信号来停止指定服务的容器"></a>通过发送SIGKILL信号来停止指定服务的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose <span class="built_in">kill</span> lnmp</span><br></pre></td></tr></table></figure><h3 id="下载服务镜像"><a href="#下载服务镜像" class="headerlink" title="下载服务镜像"></a>下载服务镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose pull</span><br></pre></td></tr></table></figure><h3 id="设置指定服务运行容器的个数，以service-num形式指定"><a href="#设置指定服务运行容器的个数，以service-num形式指定" class="headerlink" title="设置指定服务运行容器的个数，以service=num形式指定"></a>设置指定服务运行容器的个数，以service=num形式指定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose scale nginx=2 php=3</span><br></pre></td></tr></table></figure><h3 id="在一个服务上执行一个命令"><a href="#在一个服务上执行一个命令" class="headerlink" title="在一个服务上执行一个命令"></a>在一个服务上执行一个命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose run web bash</span><br></pre></td></tr></table></figure><h2 id="docker-compose-yml配置"><a href="#docker-compose-yml配置" class="headerlink" title="docker-compose.yml配置"></a>docker-compose.yml配置</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>compose文件是一个定义服务、网络和卷的YAML文件。Compose 文件的默认路径是 ./docker-compose.yml。<br>服务定义包含应用于为该服务启动的每个容器的配置，就像传递命令行参数一样  docker container create。同样，网络和卷的定义类似于 docker network create 和 docker volume  create。</p><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><h4 id="version"><a href="#version" class="headerlink" title="version"></a>version</h4><p>指定docker-compose.yml文件的写法格式</p><h4 id="services"><a href="#services" class="headerlink" title="services"></a>services</h4><p>多个容器集合</p><h4 id="build"><a href="#build" class="headerlink" title="build"></a>build</h4><p>配置构建时，Compose会利用它自动构建镜像，该值可以是一个路径，也可以是一个对象，用于指定Dockerfile参数</p><h4 id="command"><a href="#command" class="headerlink" title="command"></a>command</h4><p>覆盖容器启动后默认执行的命令</p><h4 id="dns"><a href="#dns" class="headerlink" title="dns"></a>dns</h4><p>配置dns服务器，可以是一个值或列表<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#值</span></span><br><span class="line">dns: 8.8.8.8</span><br><span class="line"><span class="comment">#列表</span></span><br><span class="line">dns: </span><br><span class="line">- 8.8.8.8</span><br><span class="line">- 114.114.114.114</span><br></pre></td></tr></table></figure></p><h4 id="dns-search"><a href="#dns-search" class="headerlink" title="dns_search"></a>dns_search</h4><p>配置DNS搜索域，可以是一个值或列表</p><h4 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h4><p>环境变量配置，可以用数组或字典两种方式<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数组</span></span><br><span class="line">environment: </span><br><span class="line">RACK_ENV: development</span><br><span class="line">    SHOW: <span class="string">'ture'</span></span><br><span class="line"><span class="comment">#字典</span></span><br><span class="line">environment:</span><br><span class="line">    - RACK_ENV=development</span><br><span class="line">    - SHOW=ture</span><br></pre></td></tr></table></figure></p><h4 id="env-file"><a href="#env-file" class="headerlink" title="env_file"></a>env_file</h4><p>从文件中获取环境变量，可以指定一个文件路径或路径列表，其优先级低于environment指定的环境变量</p><h4 id="expose"><a href="#expose" class="headerlink" title="expose"></a>expose</h4><p>暴露端口，只将端口暴露给连接的服务，而不是暴露给主机<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">expose:</span><br><span class="line">- <span class="string">"3000"</span></span><br><span class="line">- <span class="string">"8000"</span></span><br></pre></td></tr></table></figure></p><h4 id="image"><a href="#image" class="headerlink" title="image"></a>image</h4><p>指定服务所使用的镜像</p><h4 id="network-mode"><a href="#network-mode" class="headerlink" title="network_mode"></a>network_mode</h4><p>设置网络模式<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">network_mode: <span class="string">"bridge"</span></span><br><span class="line">network_mode: <span class="string">"host"</span></span><br><span class="line">network_mode: <span class="string">"none"</span></span><br><span class="line">network_mode: <span class="string">"service:[service name]"</span></span><br><span class="line">network_mode: <span class="string">"container:[container name/id]"</span></span><br></pre></td></tr></table></figure></p><h4 id="ports"><a href="#ports" class="headerlink" title="ports"></a>ports</h4><p>对外暴露的端口定义，和expose对应<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ports:   <span class="comment"># 暴露端口信息  - "宿主机端口:容器暴露端口"</span></span><br><span class="line">- <span class="string">"80:80"</span></span><br><span class="line">- <span class="string">"3306:3306"</span></span><br></pre></td></tr></table></figure></p><h4 id="links"><a href="#links" class="headerlink" title="links"></a>links</h4><p>将指定容器连接到当前连接，可以设置别名，避免ip方式导致的容器重启动态改变的无法连接情况<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">links:    <span class="comment"># 指定服务名称:别名 </span></span><br><span class="line">    - docker-compose-mysql-server:mysql</span><br></pre></td></tr></table></figure></p><h4 id="volumes"><a href="#volumes" class="headerlink" title="volumes"></a>volumes</h4><p>卷挂载路径<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">volumes:</span><br><span class="line">- /lib</span><br><span class="line">- /var</span><br></pre></td></tr></table></figure></p><h4 id="logs"><a href="#logs" class="headerlink" title="logs"></a>logs</h4><p>日志输出信息<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--no-color          单色输出，不显示其他颜.</span><br><span class="line">-f, --follow        跟踪日志输出，就是可以实时查看日志</span><br><span class="line">-t, --timestamps    显示时间戳</span><br><span class="line">--tail              从日志的结尾显示，--tail=200</span><br></pre></td></tr></table></figure></p><h4 id="更新容器"><a href="#更新容器" class="headerlink" title="更新容器"></a>更新容器</h4><p>当服务的配置发生更改时，可使用 docker-compose up 命令更新配置。<br>此时，Compose  会删除旧容器并创建新容器，新容器会以不同的 IP 地址加入网络，名称保持不变，任何指向旧容起的连接都会被关闭，重新找到新容器并连接上去。</p><h4 id="官方例子"><a href="#官方例子" class="headerlink" title="官方例子"></a>官方例子</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">"3"</span></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  redis:</span><br><span class="line">    image: redis:alpine</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"6379"</span></span><br><span class="line">    networks:</span><br><span class="line">      - frontend</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: 2</span><br><span class="line">      update_config:</span><br><span class="line">        parallelism: 2</span><br><span class="line">        delay: 10s</span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: postgres:9.4</span><br><span class="line">    volumes:</span><br><span class="line">      - db-data:/var/lib/postgresql/data</span><br><span class="line">    networks:</span><br><span class="line">      - backend</span><br><span class="line">    deploy:</span><br><span class="line">      placement:</span><br><span class="line">        constraints: [node.role == manager]</span><br><span class="line"></span><br><span class="line">  vote:</span><br><span class="line">    image: dockersamples/examplevotingapp_vote:before</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"5000:80"</span></span><br><span class="line">    networks:</span><br><span class="line">      - frontend</span><br><span class="line">    depends_on:</span><br><span class="line">      - redis</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: 2</span><br><span class="line">      update_config:</span><br><span class="line">        parallelism: 2</span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line"></span><br><span class="line">  result:</span><br><span class="line">    image: dockersamples/examplevotingapp_result:before</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"5001:80"</span></span><br><span class="line">    networks:</span><br><span class="line">      - backend</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: 1</span><br><span class="line">      update_config:</span><br><span class="line">        parallelism: 2</span><br><span class="line">        delay: 10s</span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line"></span><br><span class="line">  worker:</span><br><span class="line">    image: dockersamples/examplevotingapp_worker</span><br><span class="line">    networks:</span><br><span class="line">      - frontend</span><br><span class="line">      - backend</span><br><span class="line">    deploy:</span><br><span class="line">      mode: replicated</span><br><span class="line">      replicas: 1</span><br><span class="line">      labels: [APP=VOTING]</span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line">        delay: 10s</span><br><span class="line">        max_attempts: 3</span><br><span class="line">        window: 120s</span><br><span class="line">      placement:</span><br><span class="line">        constraints: [node.role == manager]</span><br><span class="line"></span><br><span class="line">  visualizer:</span><br><span class="line">    image: dockersamples/visualizer:stable</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"8080:8080"</span></span><br><span class="line">    stop_grace_period: 1m30s</span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">"/var/run/docker.sock:/var/run/docker.sock"</span></span><br><span class="line">    deploy:</span><br><span class="line">      placement:</span><br><span class="line">        constraints: [node.role == manager]</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  frontend:</span><br><span class="line">  backend:</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  db-data:</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Docker-Compose简介&quot;&gt;&lt;a href=&quot;#Docker-Compose简介&quot; class=&quot;headerlink&quot; title=&quot;Docker Compose简介&quot;&gt;&lt;/a&gt;Docker
  Compose简介&lt;/h2&gt;
&lt;p&gt;使用Docker Co
      
    
    </summary>
    
      <category term="虚拟化" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="docker" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/docker/"/>
    
    
  </entry>
  
  <entry>
    <title>Dockerfile指令详解</title>
    <link href="https://www.kapyan.top/posts/3772587028.html"/>
    <id>https://www.kapyan.top/posts/3772587028.html</id>
    <published>2019-07-01T01:52:53.000Z</published>
    <updated>2019-07-02T08:23:16.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h2><p>指定基础镜像，必须是第一条指令。<br>如果不以任何镜像为基础，写法为：FROM scratch<br>同时意味着接下来所写的指令将作为镜像的第一层开始。<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#三种写法，其中&lt;tag&gt;和&lt;digest&gt;是可选项，如果没有选择，默认值为latest</span></span><br><span class="line">FROM &lt;image&gt;</span><br><span class="line">FROM &lt;image&gt;:&lt;tag&gt;</span><br><span class="line">FROM &lt;image&gt;:&lt;digest&gt;</span><br></pre></td></tr></table></figure></p><h2 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h2><p>运行指定的命令,构建容器时就运行的命令以及提交运行结果<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#run的两种格式</span></span><br><span class="line">RUN &lt;<span class="built_in">command</span>&gt;</span><br><span class="line">RUN [<span class="string">"executable"</span>, <span class="string">"paraml"</span>,<span class="string">"param2"</span>]</span><br></pre></td></tr></table></figure></p><blockquote>  <p>第一种后面直接跟shell命令,第二中类似于函数调用。</p>  <ul>    <li>在linux操作系统上默认/bin/sh -c </li>    <li>在windows操作系统上默认cmd /S /C</li>  </ul></blockquote><p>注意：多行命令不要写多个RUN，因为Dockfile中每一个指令都会建立一层，多少个RUN就构建了多少层镜像，会造成镜像的臃肿、多层，不仅增加了构建部署的时间，而且容易出错。RUN指令的换行符为\</p><h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h2><p>容器启动时要运行的命令，容器启动时就运行的命令以及提交运行结果<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#有三种写法</span></span><br><span class="line">CMD [<span class="string">"executable"</span>,<span class="string">"paraml"</span>,<span class="string">"param2"</span>]</span><br><span class="line">CMD [<span class="string">"paraml"</span>,<span class="string">"param2"</span>]</span><br><span class="line">CMD <span class="built_in">command</span> paraml param2</span><br></pre></td></tr></table></figure></p><blockquote>  <p>前两种写法：</p>  <ul>    <li>CMD [“sh”,”-c”,”echo $HOME”]</li>    <li>CMD [“echo”,”$HOME”]</li>  </ul></blockquote><p>注意：参数一定要用双引号，不能用单引号。因为docker解析的是一个JSON array</p><h2 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h2><p>为镜像指定标签<br>语法:<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LABEL &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt;</span><br></pre></td></tr></table></figure></p><blockquote>  <p>LABEL会继承基础镜像的LABEL，如果遇到key相同，则覆盖值</p></blockquote><h2 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a>MAINTAINER</h2><p>指定作者<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MAINTAINER &lt;name&gt;</span><br></pre></td></tr></table></figure></p><h2 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h2><p>暴露容器运行时的监听端口给外部，但EXPOSE并不会使容器访问主机的端口，如果想使容器与主机的端口有映射关系，必须在容器启动的时候加上-p参数</p><h2 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h2><p>设置环境变量<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#有两种写法</span></span><br><span class="line">ENV &lt;key&gt; &lt;value&gt;</span><br><span class="line">ENV &lt;key&gt;=&lt;value&gt;</span><br></pre></td></tr></table></figure></p><h2 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h2><p>复制命令，把文件复制到镜像中,如果是压缩包会自动解压。<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#两种写法</span></span><br><span class="line">ADD &lt;src&gt; &lt;dest&gt;</span><br><span class="line">ADD [<span class="string">"&lt;src&gt;"</span>, <span class="string">"dest"</span>]</span><br></pre></td></tr></table></figure></p><blockquote>  <p>如果&lt;src>写成一个url，ADD就类似于wget命令。<br>    尽量不要把&lt;src>写成一个文件夹，否则复制整个目录的内容，包括文件系统元数据</p></blockquote><h2 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h2><p>又是一个复制命令，不会自动解压压缩包。<br>语法:<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#两种写法</span></span><br><span class="line">COPY &lt;src&gt; &lt;dest&gt;</span><br><span class="line">COPY [<span class="string">"&lt;src&gt;"</span>, <span class="string">"&lt;dest&gt;"</span>]</span><br></pre></td></tr></table></figure></p><p>与ADD的区别：</p><ul>  <li>COPY的&lt;src>只能是本地文件</li>  <li>COPY不会自动解压压缩包</li></ul><h2 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h2><p>启动时默认的命令<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#两种写法</span></span><br><span class="line">ENTRYPOINT [<span class="string">"executable"</span>,<span class="string">"paraml"</span>,<span class="string">"param2"</span>]</span><br><span class="line">ENTRYPOINT <span class="built_in">command</span> param1 param2</span><br></pre></td></tr></table></figure></p><p>与CMD区别：</p><ol>  <li>相同点：</li></ol><ul>  <li>只能写一条，如果写了多条，那么只有最后一条生效</li>  <li>容器启动时才运行，运行时机相同</li></ul><ol start="2">  <li>不同点：</li></ol><ul>  <li>ENTRYPOINT不会被运行的command覆盖，而CMD则会被覆盖</li>  <li>如果在Dockefile中同时写了ENTRYPOINT和CMD，并且CMD不是一个完整的可执行命令，那么CMD指定的内容将会作为ENTRYPOINT的参数</li></ul><h2 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h2><p>实现挂载功能，可以将内部文件或者其他容器中的文件夹挂载到该容器中<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VOLUME [<span class="string">"/data"</span>]</span><br></pre></td></tr></table></figure></p><blockquote>  <p>[“/data”]可以是一个JsonArray，也可以是多个值。如：VOLUME [“/var/log”]、VOLUME    /var/log、VOLUME /var/log /var/db。<br>一般使用场景为需要持久化存储数据时，容器使用的是AUFS，这种文件系统不能持久化数据，当容器关闭后，所有的更改都会丢失。</p></blockquote><h2 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h2><p>设置启动容器的用户，可以是用户名或UID<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USER &lt;username&gt;</span><br><span class="line">USER &lt;uid&gt;</span><br></pre></td></tr></table></figure></p><p>如果设置了容器以username用户去运行，RUN,CMD和 ENTRYPOINT 都会以这个用户去运行</p><h2 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h2><p>设置工作目录，对RUN,CMD,ENTRYPOINT,COPY,ADD生效。如果不存在新建，可以设置多次。<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR /path/to/workdir</span><br></pre></td></tr></table></figure></p><blockquote>  <p>WORKDIR也可以解析环境变量,如：<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ENV DIRPATH /path</span><br><span class="line">WORKDIR <span class="variable">$DIRPATH</span>/<span class="variable">$DIRNAME</span></span><br><span class="line">RUN <span class="built_in">pwd</span></span><br></pre></td></tr></table></figure>  </p></blockquote><h2 id="ARG"><a href="#ARG" class="headerlink" title="ARG"></a>ARG</h2><p>设置变量命令，ARG命令定义了一个变量，在docker build创建镜像的时候，使用--build-arg  &lt;varname>=&lt;value>来指定参数。<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ARG &lt;name&gt; [=&lt;default value&gt;]</span><br></pre></td></tr></table></figure></p><blockquote>  <p>如果用户在build镜像时指定了一个参数没有定义在Dockerfile中，将有一个提示：<code>[Warning] One or more      build-args [foo] were not consumed.</code></p></blockquote><h2 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h2><p>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ONBUILD [INSTRUCTION]</span><br></pre></td></tr></table></figure></p><blockquote>  <p>这个命令只对当前镜像的子镜像生效。</p></blockquote><h2 id="STOPSIGNAL"><a href="#STOPSIGNAL" class="headerlink" title="STOPSIGNAL"></a>STOPSIGNAL</h2><p>当容器退出时给系统发送什么样的指令<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STOPSIGNAL signal</span><br></pre></td></tr></table></figure></p><h2 id="HEALTHCHECK"><a href="#HEALTHCHECK" class="headerlink" title="HEALTHCHECK"></a>HEALTHCHECK</h2><p>容器健康状况检查命令<br>语法：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在容器内部运行一个命令来检查容器的健康状况</span></span><br><span class="line">HEALTHCHECK [OPTIONS] CMD <span class="built_in">command</span></span><br><span class="line"><span class="comment">#在基础镜像中取消健康检查命令</span></span><br><span class="line">HEALTHCHECK NONE</span><br></pre></td></tr></table></figure></p><blockquote>  <p>[OPTIONS]的选项支持以下三种：</p>  <ul>    <li>--interval=DURATION 两次检查默认的时间间隔为30秒</li>    <li>--timeout=DURATION 健康检查命令运行超时时长，默认30秒</li>    <li>--retries=N 当连续失败指定次数后，则容器被认为是不健康的，状态为unhealthy，默认次数是3</li>  </ul></blockquote><p>注意：HEALTHECK命令只能出现一次，如果出现了多次，只有最后一个生效。<br>CMD后的命令返回值决定了本次健康检查是否成功，具体的返回值如下：</p><ul>  <li>0：success 表示容器是健康的</li>  <li>1：unhealthy 表示容器已经不能工作了</li>  <li>2：reserved 保留值05c70a662cac</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;FROM&quot;&gt;&lt;a href=&quot;#FROM&quot; class=&quot;headerlink&quot; title=&quot;FROM&quot;&gt;&lt;/a&gt;FROM&lt;/h2&gt;
&lt;p&gt;指定基础镜像，必须是第一条指令。&lt;br&gt;如果不以任何镜像为基础，写法为：FROM scratch&lt;br&gt;同时意味着接下来所
      
    
    </summary>
    
      <category term="虚拟化" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="docker" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/docker/"/>
    
    
  </entry>
  
  <entry>
    <title>mysql常见错误</title>
    <link href="https://www.kapyan.top/posts/3833319179.html"/>
    <id>https://www.kapyan.top/posts/3833319179.html</id>
    <published>2019-06-18T05:43:44.000Z</published>
    <updated>2019-06-18T05:52:40.280Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1067-–-Invalid-default-value-for-‘字段名’"><a href="#1067-–-Invalid-default-value-for-‘字段名’" class="headerlink" title="1067 – Invalid default value for ‘字段名’"></a>1067  – Invalid default value for ‘字段名’</h2><p>这种错误大多是因为mysql不同版本引起的默认值不兼容问题。<br>查看sql_mode:<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like <span class="string">'sql_mode'</span>;</span><br></pre></td></tr></table></figure></p><h3 id="临时修改sql-mode"><a href="#临时修改sql-mode" class="headerlink" title="临时修改sql_mode:"></a>临时修改sql_mode:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> session sql_mode=<span class="string">'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'</span>;</span><br></pre></td></tr></table></figure><h3 id="永久修改sql-mode"><a href="#永久修改sql-mode" class="headerlink" title="永久修改sql_mode:"></a>永久修改sql_mode:</h3><p>编辑my.cnf文件<br>在[mysqld]下添加以下配置:<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_mode=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure></p><p>重启mysql生效</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1067-–-Invalid-default-value-for-‘字段名’&quot;&gt;&lt;a href=&quot;#1067-–-Invalid-default-value-for-‘字段名’&quot; class=&quot;headerlink&quot; title=&quot;1067 – Invalid d
      
    
    </summary>
    
      <category term="mysql" scheme="https://www.kapyan.top/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://www.kapyan.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Ansible之playbooks</title>
    <link href="https://www.kapyan.top/posts/2673518294.html"/>
    <id>https://www.kapyan.top/posts/2673518294.html</id>
    <published>2019-06-04T06:44:07.000Z</published>
    <updated>2019-06-04T09:57:48.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="playbook简介"><a href="#playbook简介" class="headerlink" title="playbook简介"></a>playbook简介</h2><p>playbook是由一个或多个“play”组成的列表。<br>play的主要功能在于将事先归并为一组的主机装扮成事先通过ansible中的task定义好的角色。<br>从根本上来讲，所谓task无非是调用ansible的一个module。<br>将多个play组织在一个playbook中，既可以让它们连同起来按事先编排的机制同唱一台戏。</p><h2 id="playbook基础组件"><a href="#playbook基础组件" class="headerlink" title="playbook基础组件"></a>playbook基础组件</h2><h3 id="hosts和users"><a href="#hosts和users" class="headerlink" title="hosts和users"></a>hosts和users</h3><p>playbook中的每一个play的目的都是为了让某个或某些主机以某个指定的用户身份执行任务。<br>hosts用于指定要执行指定任务的主机，可以是一个或多个由冒号分割主机组。<br>remote_user则用于指定远程主机上的执行任务的用户。不过，remote_user也可用于各task中，也可以通过指定其通过sudo的方式在远程主机上执行任务，其可用于play全局或某任务。此外，甚至可以在sudo时使用sudo_user指定sudo时切换的用户。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- hosts: <span class="built_in">test</span></span><br><span class="line">  remote_user: <span class="built_in">test</span></span><br><span class="line">  tasks:</span><br><span class="line">  - name: <span class="built_in">test</span> connection</span><br><span class="line">    ping:</span><br><span class="line">    remote_user: <span class="built_in">test</span></span><br><span class="line">    sudo: yes</span><br></pre></td></tr></table></figure></p><h3 id="任务列表和action"><a href="#任务列表和action" class="headerlink" title="任务列表和action"></a>任务列表和action</h3><p>play的主体部分是task list。<br>task  list中的各任务按次序逐个在hosts中指定的所有主机上执行，即在所有主机上完成第一个任务后再开始第二个。<br>在运行自上而下某playbook时，如果中途发生错误，所有已执行任务都将回滚，因此，在更正playbook后重新执行一次即可。<br>task的目的是使用指定的参数执行模块，而在模块参数中可以使用变量。<br>模块执行是幂等的，这意味着多次执行是安全的，因为其结果均一致。<br>每个task都应该有其name，用于playbook的执行结果输出，建议其内容尽可能清晰地描述任务执行步骤。如果未提供name，则action的结果将用于输出。<br>定义task可以使用“action:module  options”或“module:options”的格式，推荐使用后者以实现向后兼容。如果action一行的内容过多，也可在行首使用几个空白字符进行换行。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- name: make sure apahce is running</span><br><span class="line">  service: name=httpd state=running</span><br></pre></td></tr></table></figure></p><p>在众多模块中，只有command和shell模块仅需要给定一个列表而无需使用“key=value”格式<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- name: disbale selinux</span><br><span class="line">  <span class="built_in">command</span>: /sbin/setenforce 0</span><br></pre></td></tr></table></figure></p><p>如果命令或脚本的退出代码不为零，可以使用以下方式代替：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- name: run this <span class="built_in">command</span> and ignore the reslut</span><br><span class="line">  shell: /usr/bin/somecommand || /bin/ture</span><br></pre></td></tr></table></figure></p><p>或者使用ignore_errors来忽略错误信息：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line">- name: run this <span class="built_in">command</span> and ignore the reslut</span><br><span class="line">  shell: /ur/bin/somecommand</span><br><span class="line">  ignore_erros: True</span><br></pre></td></tr></table></figure></p><h3 id="handlers"><a href="#handlers" class="headerlink" title="handlers"></a>handlers</h3><p>用于当关注的资源发生变化时采取一定的操作。<br>“notify”这个action可用于在每个play的最后被触发，这样可以避免多次有改变发生时每次都执行指定的操作，取而代之，仅在所有变化发生完成后一次性地执行指定操作。<br>在notify中列出的操作称为handler，也即notify中调用handler中定义的操作。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- name: template configuration file</span><br><span class="line">  template: src=template.j2 dest=/etc/foo.conf </span><br><span class="line">  notify: </span><br><span class="line">  - restart memached</span><br><span class="line">  - restart apache</span><br></pre></td></tr></table></figure></p><p>handler是task列表，这些task与前述的task并没有本质不同。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">handlers:</span><br><span class="line">   - name: restart memached</span><br><span class="line">     service: name=memached state=restarted</span><br><span class="line">   - name: restart apache</span><br><span class="line">    service: naem=apache state=restarted</span><br></pre></td></tr></table></figure></p><h3 id="tags"><a href="#tags" class="headerlink" title="tags"></a>tags</h3><p>tags用于让用户选择运行或跳过playbook中的部分代码。ansible具有幂等性，因此会自动跳过没有变化的部分，即便如此，有些代码为测试其确实没有发生变化的时间依然会很长。<br>此时，如果确信其没有变化，就可以通过tags跳过此些代码片断。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook test.yaml -t conf  <span class="comment">#-t参数可以指定只同步tags为conf的tasks</span></span><br><span class="line">ansible-playbook test.yaml --skip-tags install<span class="comment">#--skip-tags参数可以跳过tags为install的tasks</span></span><br></pre></td></tr></table></figure></p><h3 id="完整示例playbook剧本"><a href="#完整示例playbook剧本" class="headerlink" title="完整示例playbook剧本"></a>完整示例playbook剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- name: web service</span><br><span class="line">  remote_user: root</span><br><span class="line">  hosts: webhosts</span><br><span class="line">  vars:</span><br><span class="line">  packages: httpd</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install httpd</span><br><span class="line">    yum: name=&#123;&#123; packages &#125;&#125; state=present</span><br><span class="line">    tags: install</span><br><span class="line">  - name: configuration httpd</span><br><span class="line">    copy: src=/root/httpd.conf dest=/etc/httpd/conf/httd.conf</span><br><span class="line">    tags: conf</span><br><span class="line">    notify:</span><br><span class="line">    - restart httpd</span><br><span class="line">  - name: service httpd start</span><br><span class="line">    service: name=httpd enabled=no state=started</span><br><span class="line">    tags: start</span><br><span class="line">  handlers:</span><br><span class="line">  -name: restart httd</span><br><span class="line">   service: name=httpd state=restarted</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;playbook简介&quot;&gt;&lt;a href=&quot;#playbook简介&quot; class=&quot;headerlink&quot; title=&quot;playbook简介&quot;&gt;&lt;/a&gt;playbook简介&lt;/h2&gt;
&lt;p&gt;playbook是由一个或多个“play”组成的列表。&lt;br&gt;play的主
      
    
    </summary>
    
      <category term="任务编排" scheme="https://www.kapyan.top/categories/%E4%BB%BB%E5%8A%A1%E7%BC%96%E6%8E%92/"/>
    
      <category term="ansible" scheme="https://www.kapyan.top/categories/%E4%BB%BB%E5%8A%A1%E7%BC%96%E6%8E%92/ansible/"/>
    
    
      <category term="playbook" scheme="https://www.kapyan.top/tags/playbook/"/>
    
  </entry>
  
  <entry>
    <title>Ansible常用操作和模块</title>
    <link href="https://www.kapyan.top/posts/1416347103.html"/>
    <id>https://www.kapyan.top/posts/1416347103.html</id>
    <published>2019-05-28T09:38:23.000Z</published>
    <updated>2019-06-04T06:48:56.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible简介"><a href="#Ansible简介" class="headerlink" title="Ansible简介"></a>Ansible简介</h2><p>Ansible是一个简单的自动化运维管理工具，基于Python语言实现，由Paramiko和PyYAML两个关键模块构建，可用于自动化部署应用、配置、编排task（持续交付、无宕机更新等）。<br>Ansible与Saltstack最大的区别是Ansible无需在被控主机部署任何客户端代理，默认直接通过ssh通道进行远程命令执行或下发配置；相同点是都具备功能强大、灵活的系统管理、状态配置，两者都提供丰富的模板及API，对云计算平台、大数据都有很好的支持。</p><h2 id="安装Ansible"><a href="#安装Ansible" class="headerlink" title="安装Ansible"></a>安装Ansible</h2><p>Centos系统<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y ansible</span><br></pre></td></tr></table></figure></p><p>Ubuntu系统<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo apt-add-repository ppa:ansible/ansible</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ansible</span><br></pre></td></tr></table></figure></p><h2 id="修改ansible-cfg文件"><a href="#修改ansible-cfg文件" class="headerlink" title="修改ansible.cfg文件"></a>修改ansible.cfg文件</h2><p>Ansible1.2.1及其后的版本都会默认启用公钥认证。<br>如果有个主机重新安装并在“know_hosts”中有了不同的key，这会提示一个错误信息直到被纠正为止；如果有个主机没有在“known_hosts”中被初始化将会导致在交互使用ansible或定时执行ansible时对key信息的确认提示。<br>如果想禁用此行为，可以编辑/etc/ansible/ansible.cfg文件，修改以下配置：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host_key_checking = False</span><br></pre></td></tr></table></figure></p><h2 id="Inventory文件"><a href="#Inventory文件" class="headerlink" title="Inventory文件"></a>Inventory文件</h2><p>Ansible可同时操作属于一个组的多太主机，组和主机之间的关系通过inventory文件配置，默认路径为/etc/ansible/hosts。<br>inventory文件遵循INI文件风格，中括号中的字符为组名，可以将同一个主机同时归并到多个不同的组中；若目标主机使用了非默认端口，还可以在主机名称之后使用冒号加端口号来表明。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">www1.web.com:20000</span><br><span class="line">www2.web.com</span><br><span class="line"></span><br><span class="line">[dbservers]</span><br><span class="line">db1.com</span><br><span class="line">db2.com</span><br></pre></td></tr></table></figure></p><h3 id="主机列表"><a href="#主机列表" class="headerlink" title="主机列表"></a>主机列表</h3><p>如果主机名称遵循相似的名称模式，还可以使用列表的方式标识主机。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">www[01:50].web.com</span><br><span class="line"></span><br><span class="line">[dbservers]</span><br><span class="line">db-[a:z].com</span><br></pre></td></tr></table></figure></p><h3 id="主机变量"><a href="#主机变量" class="headerlink" title="主机变量"></a>主机变量</h3><p>可以在inventory中定义主机时为其添加主机变量以便于在playbook中使用。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">www.web.com http_port=80 maxRequestPerChild=808</span><br></pre></td></tr></table></figure></p><h3 id="组变量"><a href="#组变量" class="headerlink" title="组变量"></a>组变量</h3><p>组变量是指赋予给指定组内所有主机上的在playbook中可用的变量。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">www.web.com</span><br><span class="line"></span><br><span class="line">[webservers:vars]</span><br><span class="line">ntp_server=ntp1.aliyun.com</span><br></pre></td></tr></table></figure></p><h3 id="组嵌套"><a href="#组嵌套" class="headerlink" title="组嵌套"></a>组嵌套</h3><p>inventory中，组还可以包含其他的组，并且也可以向组中的主机指定变量。不过这些变量只能在ansible-playbook中使用，ansible不支持。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[apache]</span><br><span class="line">httpd1.com</span><br><span class="line">httpd2.com</span><br><span class="line"></span><br><span class="line">[nginx]</span><br><span class="line">nginx1.com</span><br><span class="line">nginx2.com</span><br><span class="line"></span><br><span class="line">[webservers:children]</span><br><span class="line">apache</span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line">[webservers:vars]</span><br><span class="line">ntp_server=ntp1.aliyun.com</span><br></pre></td></tr></table></figure></p><h3 id="inventory参数"><a href="#inventory参数" class="headerlink" title="inventory参数"></a>inventory参数</h3><p>ansible基于ssh连接inventory中指定的远程主机时，还可以通过参数指定其交互方式:<br>常用的参数如下：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ansible_ssh_host<span class="comment">#将要连接的远程主机名，与想要设定的主机的别名不同的话，可通过此变量设置</span></span><br><span class="line">ansible_ssh_port<span class="comment">#ssh端口号，如果不是默认端口号，通过此变量设置</span></span><br><span class="line">ansible_ssh_user<span class="comment">#默认的sssh用户名</span></span><br><span class="line">ansible_ssh_pass<span class="comment">#ssh密码（这种方式并不安全，建议使用--ask-pass或ssh秘钥）</span></span><br><span class="line">ansible_sudo_pass<span class="comment">#sudo密码（这种方式并不安全，建议使用--ask-pass）</span></span><br><span class="line">ansible_sudo_exe<span class="comment">#sudo命令路径（适用于1.8及以上版本）</span></span><br><span class="line">ansible_connection<span class="comment">#与主机的连接类型，比如：local,ssh,或paramiko。Ansible 1.2 以前默认使用 paramiko.1.2 以后默认使用 'smart','smart' 方式会根据是否支持 ControlPersist, 来判断'ssh' 方式是否可行</span></span><br><span class="line">ansible_ssh_private_key_file<span class="comment">#ssh使用的私钥文件，适用于有多个秘钥，而不想使用ssh代理的情况</span></span><br><span class="line">ansible_shell_type <span class="comment">#目标系统的shell类型，默认情况下，命令的执行使用‘sh’语法，可设置为‘csh’或‘fish’</span></span><br><span class="line">ansible_python_interpreter<span class="comment">#目标主机的Python路径，适用情况：系统中有多个Python，或者命令路径不是“/usr/bin/python”</span></span><br><span class="line"><span class="comment">#与 ansible_python_interpreter 的工作方式相同,可设定如 ruby 或 perl 的路径....</span></span><br></pre></td></tr></table></figure></p><h2 id="ansible命令"><a href="#ansible命令" class="headerlink" title="ansible命令"></a>ansible命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible &lt;Host-partten&gt; -m 模块 -a <span class="string">"模块参数"</span></span><br><span class="line">ansible-doc -l<span class="comment">#查看支持的模块</span></span><br></pre></td></tr></table></figure><h2 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h2><h3 id="setup"><a href="#setup" class="headerlink" title="setup"></a>setup</h3><p>查看远程主机的基本信息<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible -i /etc/ansible/hosts <span class="built_in">test</span> -m setup</span><br></pre></td></tr></table></figure></p><p>测试远程主机的运行状态</p><h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -m ping</span><br></pre></td></tr></table></figure><h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><p>设置文件属性<br>file模块包含以下选项:</p><ul>  <li>force:需要在两种情况下强制创建软链接，一种是源文件不存在但之后会建立的情况下；另一种是目标软链接已存在，需要先取消之前的软链接，然后创建新的软链接，有两个选项:yes|no</li>  <li>group:定义文件/目录的属组</li>  <li>mode:定义文件/目录的权限</li>  <li>owner:定义文件/目录的属主</li>  <li>path:必选项，定义文件/目录的路径</li>  <li>recurse:递归的设置文件的路径，只对目录有效</li>  <li>src:要被链接的源文件路径，只应用于state=link的情况</li>  <li>dest:被链接到的路径，只用于state-link的情况</li>  <li>state:<br>&emsp;&emsp;&emsp;&emsp;directory:如果目录不存在，创建目录<br>&emsp;&emsp;&emsp;&emsp;file:即使文件不存在，也不会被创建<br>&emsp;&emsp;&emsp;&emsp;link:创建软链接<br>&emsp;&emsp;&emsp;&emsp;hard:创建硬链接<br>&emsp;&emsp;&emsp;&emsp;touch:如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改的时间<br>&emsp;&emsp;&emsp;&emsp;absent:删除目录、文件或者取消链接文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -m file -a <span class="string">"src=/etc/fstab dest=/tmp/fstab state=link"</span></span><br><span class="line">ansible <span class="built_in">test</span> -m file -a <span class="string">"path=/tmpfatab state=absent"</span></span><br><span class="line">ansible <span class="built_in">test</span> -m file -a <span class="string">"path=/tmp/test state=touch"</span></span><br></pre></td></tr></table></figure><h3 id="copy"><a href="#copy" class="headerlink" title="copy"></a>copy</h3><p>复制文件到远程主机<br>copy模块包含以下选项：</p><ul>  <li>backup：在覆盖前将原文件备份，备份文件包含时间信息。有两个选项：yes|no</li>  <li>content：用于代替src，可以直接设定指定文件的值</li>  <li>dest：必选项。要将源文件复制到的远程主机的绝对路径，如果源文件是一个目录，那么该路径也必须是一个目录</li>  <li>directroy_mode：递归设定目录权限，默认为系统默认权限</li>  <li>force：如果目标主机包含该文件，但内容不同，设为yes，则强制覆盖，设为no，则只有当目标主机的目标位置不存在该文件时，才复制。默认为yes</li>  <li>others：所有的file模块里的选项都可以在这里使用</li>  <li>src：要复制到远程主机的文件在本地的地址，可以是绝对路径，也可以是相对路径。如果路径是一个目录，它将递归复制，在这种情况下，如果路径使用/来结尾，则只复制目录里的内容，如果没有使用/结尾，则包含目录在内的整个内容，类似于rsync</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -m copy -a <span class="string">"src=/srv/myfiles/foo.conf dest=/etc/foo.conf owner=foo group=foo mode=0644"</span></span><br><span class="line">ansible <span class="built_in">test</span> -m copy -a <span class="string">"src=/mine/ntp.conf dest=/etc/ntp.conf owner=root group=root mode=644 backup=yes"</span></span><br><span class="line">ansible <span class="built_in">test</span> -m copy -a <span class="string">"src=/mine/sudoers dest=/etc/sudoers validate='visudo -cf %s'"</span></span><br></pre></td></tr></table></figure><h3 id="command"><a href="#command" class="headerlink" title="command"></a>command</h3><p>在远程主机上执行命令<br>command模块包含以下选项：</p><ul>  <li>creates：一个文件名，当该文件存在，则该命令不执行</li>  <li>free_form：要执行的linux指令</li>  <li>chdir：在执行指令之前，先切换到该指定的目录</li>  <li>removes：一个文件名，当该文件不存在，则该选项不执行</li>  <li>executable：切换shell来执行指令，该执行路径必须是一个绝对路径</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -a <span class="string">"/sbin/reboot"</span></span><br></pre></td></tr></table></figure><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><p>切换到某个shell执行指定指令，参数与command相同<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -m shell -a <span class="string">"test.sh"</span> &gt;&gt; test.txt<span class="string">"</span></span><br></pre></td></tr></table></figure></p><h3 id="service"><a href="#service" class="headerlink" title="service"></a>service</h3><p>用于管理服务<br>该模块包含以下选项：</p><ul>  <li>arguments：给命令行提供一些选项</li>  <li>enabled：是否开机启动 yes|no</li>  <li>name：必选项，服务名称</li>  <li>pattern：定义一个模式，如果通过status指令来查看服务的状态时，没有响应，就会通过ps指令在进程中根据该模式进行查找，如果匹配到，则认为该服务依然在运行</li>  <li>runlevel：运行级别</li>  <li>sleep：如果执行了restarted，则在stop和start之间沉睡几秒钟</li>  <li>state：对当前服务执行启动、停止、重启、重新加载等操作(started,stopped,restarted,reloaded)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -m service -a <span class="string">"name=httpd state=started enabled=yes"</span></span><br><span class="line">ansible <span class="built_in">test</span> -m service -a <span class="string">"name=foo pattern=/usr/bin/foo state=started"</span></span><br><span class="line">ansible <span class="built_in">test</span> -m service -a <span class="string">"name=network state=restarted args=eth0"</span></span><br></pre></td></tr></table></figure><h3 id="cron"><a href="#cron" class="headerlink" title="cron"></a>cron</h3><p>用于管理计划任务<br>包含以下选项：</p><ul>  <li>backup：对远程主机上的原任务计划内容修改之前做备份</li>  <li>cron_file：如果指定该选项，则用该文件替换远程主机上的crond.d目录下的用户的任务计划</li>  <li>day:日（1-31，*，*/2,…）</li>  <li>hour：小时（0-23，*，*/2，…）</li>  <li>minute：分钟（0-59，*，*/2，…）</li>  <li>month：月（1-12，*，*/2，…）</li>  <li>weekday：周（0-7，*，…）</li>  <li>job：要执行的任务，依赖于state=present</li>  <li>name：该任务的描述</li>  <li>special_time：指定什么时候执行，参数：reboot,yearly,annually,monthly,weekly,daily,hourly</li>  <li>state：确认该任务计划是创建还是删除</li>  <li>user：以哪个用户的身份执行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -m cron -a <span class="string">'name="check dirs" hour="5,2" job="ls -alh &gt; /dev/null"'</span></span><br><span class="line">ansible <span class="built_in">test</span> -m cron -a <span class="string">'name="a job for reboot" special_time=reboot job="/some/job.sh"'</span></span><br><span class="line">ansible <span class="built_in">test</span> -m cron -a <span class="string">'name="yum autoupdate" weekday="2" minute=0 hour=12 user="root" job="YUMINTERACTIVE=0 /usr/sbin/yum-autoupdate" cron_file=ansible_yum-autoupdate'</span></span><br><span class="line">ansilbe <span class="built_in">test</span> -m cron -a <span class="string">'cron_file=ansible_yum-autoupdate state=absent'</span></span><br></pre></td></tr></table></figure><h3 id="filesystem"><a href="#filesystem" class="headerlink" title="filesystem"></a>filesystem</h3><p>在块设备上创建文件系统<br>选项：</p><ul>  <li>dev：目标块设备</li>  <li>force：在一个已有文件系统的设备上强制创建</li>  <li>fstype：文件系统的类型</li>  <li>opts：传递给mkfs命令的选项</li></ul><h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><p>使用yum包管理器来管理软件包<br>选项：</p><ul>  <li>config_file：yum的配置文件</li>  <li>disable_gpg_check：关闭gpg_check</li>  <li>disablerepo：不启用某个源</li>  <li>enablerepo：启用某个源</li>  <li>name: 要进行操作的软件包的名字，也可以传递一个url或者一个本地的rpm包路径</li>  <li>state：状态,present、absent、latest(安装、卸载、更新)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -m yum -a <span class="string">'name=httpd state=latest'</span></span><br><span class="line">ansible <span class="built_in">test</span> -m yum -a <span class="string">'name="@Development tools" state=present'</span></span><br><span class="line">ansible <span class="built_in">test</span> -m yum -a <span class="string">'name=http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm state=present'</span></span><br></pre></td></tr></table></figure><h3 id="user"><a href="#user" class="headerlink" title="user"></a>user</h3><p>管理用户<br>选项：</p><ul>  <li>name参数：必须参数，用于指定要操作的用户名称，可以使用别名 user。</li>  <li>group参数：此参数用于指定用户所在的基本组。</li>  <li>gourps参数：此参数用于指定用户所在的附加组。注意，如果说用户已经存在并且已经拥有多个附加组，那么如果想要继续添加新的附加组，需要结合append    参数使用，否则在默认情况下，当再次使用 groups 参数设置附加组时，用户原来的附加组会被覆盖。</li>  <li>append参数：如果用户原本就存在多个附加组，那么当使用 groups -    参数设置附加组时，当前设置会覆盖原来的附加组设置，如果不想覆盖原来的附加组设置，需要结合 append 参数，将 append 设置为 -    yes，表示追加附加组到现有的附加组设置，append 默认值为 no。</li>  <li>shell参数：此参数用于指定用户的默认 shell。</li>  <li>uid参数：此参数用于指定用户的 uid 号。</li>  <li>expires参数：此参数用于指定用户的过期时间，相当于设置 /etc/shadow -    文件中的的第8列，比如，你想要设置用户的过期日期为2018年12月31日，那么你首先要获取到2018年12月31日的 unix 时间戳，使用命令    “date -d 2018-12-31 +%s” 获取到的时间戳为1546185600，所以，当设置    expires=1546185600时，表示用户的过期时间为2018年12月31日0点0分，设置成功后，查看远程主机的 /etc/shadow    文件，对应用户的第8八列的值将变成17895（表示1970年1月1日到2018年12月31日的天数，unix时间戳的值会自动转换为天数，我们不用手动的进行换算），目前此参数只支持在    Linux 和 FreeBSD 系统中使用。</li>  <li>comment参数：此参数用于指定用户的注释信息。</li>  <li>state参数：此参数用于指定用户是否存在于远程主机中，可选值有 present、absent，默认值为    present，表示用户需要存在，当设置为 absent时表示删除用户。</li>  <li>remove参数：当 state 的值设置为 absent时，表示要删除远程主机中的用户。但是在删除用户时，不会删除用户的家目录等信息，这是因为    remove 参数的默认值为 no，如果设置为yes，在删除用户的同时，会删除用户的家目录。当 state=absent 并且 remove=yes    时，相当于执行 “userdel –remove” 命令。</li>  <li>password参数：需要特别说明的是，password后面指定的密码不能是明文，后面这一串密码会被直接传送到被管理主机的/etc/shadow文件中，而登陆的时候输入的密码会被hash加密以后再去与/etc/shadow中存放的密码去做对比，会出现不一致的现象。所以需要先将密码字符串进行加密处理：openssl    passwd -salt -1 “123456”，然后将得到的字符串放到password中即可。</li>  <li>update_password参数：此参数有两个值可选，always 和 on_create，当此参数的值设置为always 时表示，如果    password参数设置的值与用户当前的加密过的密码字符串不一致，则直接更新用户的密码，默认值即为 always，但是当此参数设置为    on_create 时，如果    password参数设置的值与用户当前的加密过的密码字符串不一致，则不会更新用户的密码字符串，保持之前的密码设定。如果是新创建的用户，即使此参数设置为on_create，也会将用户的密码设置为    password 参数对应的值。</li>  <li>generate_ssh_key参数：此参数默认值为 no，如果设置为 yes，表示为对应的用户生成 ssh 密钥对，默认在用户家目录的    ./ssh 目录中生成名为 id_rsa 的私钥和名为 id_rsa.pub    的公钥，如果同名的密钥已经存在与对应的目录中，原同名密钥并不会被覆盖(不做任何操作)。</li>  <li>ssh_key_file参数：当 generate_ssh_key 参数的值为 yes 时，使用此参数自定义生成    ssh私钥的路径和名称，对应公钥会在同路径下生成，公钥名以私钥名开头，以”.pub”结尾。</li>  <li>ssh_key_comment参数：当 generate_ssh_key 参数的值为 yes    时，在创建证书时，使用此参数设置公钥中的注释信息。但是如果同名的密钥对已经存在，则并不会修改原来的注释信息，即不做任何操作。当不指定此参数时，默认的注释信息为”ansible-generated    on 远程主机的主机名”。</li>  <li>ssh_key_passphrase参数：当 generate_ssh_key 参数的值为 yes -    时，在创建证书时，使用此参数设置私钥的密码。但是如果同名的密钥对已经存在，则并不会修改原来的密码，即不做任何操作。</li>  <li>ssh_key_type参数：当 generate_ssh_key 参数的值为 yes    时，在创建证书时，使用此参数设置密钥对的类型。默认密钥类型为 rsa，但是如果同名的密钥对已经存在，并不会对同名密钥做任何操作。</li></ul><h3 id="group"><a href="#group" class="headerlink" title="group"></a>group</h3><p>group模块可以帮助我们管理远程主机上的组<br>选项：</p><ul>  <li>name：必须参数，用于指定要操作的组名称</li>  <li>state：用于指定组的状态，可选值：present(新建)、absent（删除）</li>  <li>gid：用于指定组的gid</li></ul><h3 id="synchronize"><a href="#synchronize" class="headerlink" title="synchronize"></a>synchronize</h3><p>使用rsync同步文件<br>选项：</p><ul>  <li>src：必填，源地址路径</li>  <li>dest：必填，目的地址路径</li>  <li>mode：mode=push，推送ansible(src)-&gt;远程主机(dest)；mode=pull，拉取远程主机(src)-&gt;ansible(dest)，默认为push</li>  <li>group：文件属组</li>  <li>owner：文件属主</li>  <li>archive：是否采用归档模式同步，即以源文件相同属性同步到目标地址，默认为yes</li>  <li>delete：是否删除源中没有而目标存在的文件（即以推送方为主），默认为no</li>  <li>compress：是否开启压缩，默认为yes</li>  <li>rsync_opts：rsync参数部分，–exclude：忽略同步文件，目录</li>  <li>rysnc_timeout：指定rsync操作的IP超时时间，和rsync命令的–timeout参数效果一样</li></ul><h3 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h3><p>配置挂载点<br>选项：</p><ul>  <li>fstype：必选项，挂载文件的类型</li>  <li>name：必选项，挂载点</li>  <li>opts：传递给mount命令的参数</li>  <li>src：必选项，要挂载的文件</li>  <li>state：必选项<br>&emsp;&emsp;&emsp;&emsp;presen：只处理fstab中的配置<br>&emsp;&emsp;&emsp;&emsp;absent：删除挂载点<br>&emsp;&emsp;&emsp;&emsp;mounted：自动创建挂载点并挂载<br>&emsp;&emsp;&emsp;&emsp;umounted：卸载</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ansible <span class="built_in">test</span> -a <span class="string">'dd if=/dev/zero of=/disk.img bs=4k count=1024'</span></span><br><span class="line">ansible <span class="built_in">test</span> -a <span class="string">'losetup /dev/loop0 /disk.img'</span></span><br><span class="line">ansible <span class="built_in">test</span> -m filesystem <span class="string">'fstype=ext4 force=yes opts=-F dev=/dev/loop0'</span></span><br><span class="line">ansible <span class="built_in">test</span> -m mount <span class="string">'name=/mnt src=/dev/loop0 fstype=ext4 state=mounted opts=rw'</span></span><br></pre></td></tr></table></figure><h3 id="raw"><a href="#raw" class="headerlink" title="raw"></a>raw</h3><p>类似command，但可以传递管道</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ansible简介&quot;&gt;&lt;a href=&quot;#Ansible简介&quot; class=&quot;headerlink&quot; title=&quot;Ansible简介&quot;&gt;&lt;/a&gt;Ansible简介&lt;/h2&gt;
&lt;p&gt;Ansible是一个简单的自动化运维管理工具，基于Python语言实现，由Para
      
    
    </summary>
    
      <category term="任务编排" scheme="https://www.kapyan.top/categories/%E4%BB%BB%E5%8A%A1%E7%BC%96%E6%8E%92/"/>
    
      <category term="ansible" scheme="https://www.kapyan.top/categories/%E4%BB%BB%E5%8A%A1%E7%BC%96%E6%8E%92/ansible/"/>
    
    
      <category term="ansible" scheme="https://www.kapyan.top/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装python3.6环境</title>
    <link href="https://www.kapyan.top/posts/1247738503.html"/>
    <id>https://www.kapyan.top/posts/1247738503.html</id>
    <published>2019-05-20T03:00:36.000Z</published>
    <updated>2019-05-20T03:12:26.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="yum源安装python3-6"><a href="#yum源安装python3-6" class="headerlink" title="yum源安装python3.6"></a>yum源安装python3.6</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br><span class="line">yum install https://centos7.iuscommunity.org/ius-release.rpm -y</span><br><span class="line">yum install python36u -y</span><br><span class="line">yum install python36u-devel -y</span><br><span class="line">ln -s /bin/python3.6 /bin/python3     <span class="comment">#创建python3软连接</span></span><br><span class="line">yum install python36u-pip -y</span><br><span class="line">ln -s /bin/pip3.6 /bin/pip3<span class="comment">#创建pip3软连接</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;yum源安装python3-6&quot;&gt;&lt;a href=&quot;#yum源安装python3-6&quot; class=&quot;headerlink&quot; title=&quot;yum源安装python3.6&quot;&gt;&lt;/a&gt;yum源安装python3.6&lt;/h2&gt;
&lt;figure class=&quot;highl
      
    
    </summary>
    
      <category term="python" scheme="https://www.kapyan.top/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>安装jenkins遇到的错误</title>
    <link href="https://www.kapyan.top/posts/4149858732.html"/>
    <id>https://www.kapyan.top/posts/4149858732.html</id>
    <published>2019-05-17T01:45:26.000Z</published>
    <updated>2019-05-17T02:12:08.476Z</updated>
    
    <content type="html"><![CDATA[<h2 id="No-such-plugin-cloudbees-folder"><a href="#No-such-plugin-cloudbees-folder" class="headerlink" title="No such plugin:cloudbees-folder"></a>No  such plugin:cloudbees-folder</h2><p>用Jenkins的war包部署时,报错如下图:<br><img src="/posts/4149858732/erro1.png" alt="error1"><br>是因为war包中缺少cloudbees-folder.hpi插件，下载该插件放在jenkins程序的WEB-INF/detached-plugins/目录下，重启Jenkins即可<br>cloudbees-folder.hpi下载地址：<a href="http://ftp.icm.edu.pl/packages/jenkins/plugins/cloudbees-folder/">http://ftp.icm.edu.pl/packages/jenkins/plugins/cloudbees-folder/</a></p><h2 id="Jenkins实例离线"><a href="#Jenkins实例离线" class="headerlink" title="Jenkins实例离线"></a>Jenkins实例离线</h2><p>在安装插件时出现该错误，报错如下图:<br><img src="/posts/4149858732/erro2.png" alt="error2"><br>Jenkins在下载插件之前会先检查网络连接，读取.jenkins/updates/default.json(默认在用户家目录下)中的connectionCheckUrl地址，默认是<a href="http://www.google.com/,所以会导致网络检测不通过，出现这个错误。将http://www.google.com/替换为http://www.baidu.com/,重启jenkins即可。">http://www.google.com/,所以会导致网络检测不通过，出现这个错误。将http://www.google.com/替换为http://www.baidu.com/,重启jenkins即可。</a></p><h2 id="修改Jenkins插件下载地址为国内地址"><a href="#修改Jenkins插件下载地址为国内地址" class="headerlink" title="修改Jenkins插件下载地址为国内地址"></a>修改Jenkins插件下载地址为国内地址</h2><p>修改文件.jenkins/hudson.model.UpdateCenter.xml，将地址替换为以下两个中的一个：<br><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</a><br><a href="http://mirror.esuni.jp/jenkins/updates/update-center.json">http://mirror.esuni.jp/jenkins/updates/update-center.json</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;No-such-plugin-cloudbees-folder&quot;&gt;&lt;a href=&quot;#No-such-plugin-cloudbees-folder&quot; class=&quot;headerlink&quot; title=&quot;No such plugin:cloudbees-folde
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.kapyan.top/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    
      <category term="jenkins" scheme="https://www.kapyan.top/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Centos7防火墙firewalld</title>
    <link href="https://www.kapyan.top/posts/450409287.html"/>
    <id>https://www.kapyan.top/posts/450409287.html</id>
    <published>2019-05-16T09:32:59.000Z</published>
    <updated>2019-05-17T02:31:09.818Z</updated>
    
    <content type="html"><![CDATA[<h2 id="firewalld服务命令"><a href="#firewalld服务命令" class="headerlink" title="firewalld服务命令"></a>firewalld服务命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld<span class="comment">#启动</span></span><br><span class="line">systemctl status firewalld <span class="comment">#查看状态</span></span><br><span class="line">systemctl stop firewalld<span class="comment">#停止</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld <span class="comment">#开机禁止启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld  <span class="comment">#开机自启</span></span><br><span class="line">firewall-cmd --version<span class="comment">#查看版本</span></span><br><span class="line">firewall-cmd --<span class="built_in">help</span><span class="comment">#查看帮助</span></span><br></pre></td></tr></table></figure><h2 id="firewalld操作"><a href="#firewalld操作" class="headerlink" title="firewalld操作"></a>firewalld操作</h2><h3 id="查看操作"><a href="#查看操作" class="headerlink" title="查看操作"></a>查看操作</h3><h4 id="查看已开放的服务"><a href="#查看已开放的服务" class="headerlink" title="查看已开放的服务"></a>查看已开放的服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-services <span class="comment">#查看已开放的服务</span></span><br></pre></td></tr></table></figure><h4 id="查看可开放的服务"><a href="#查看可开放的服务" class="headerlink" title="查看可开放的服务"></a>查看可开放的服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --get-services <span class="comment">#查看可开放的服务</span></span><br></pre></td></tr></table></figure><h4 id="查看开放的所有端口"><a href="#查看开放的所有端口" class="headerlink" title="查看开放的所有端口"></a>查看开放的所有端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports<span class="comment">#查看开放的所有端口</span></span><br></pre></td></tr></table></figure><h4 id="查看一个端口是否开放"><a href="#查看一个端口是否开放" class="headerlink" title="查看一个端口是否开放"></a>查看一个端口是否开放</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --query-port=80/tcp</span><br></pre></td></tr></table></figure><h4 id="查看区域信息"><a href="#查看区域信息" class="headerlink" title="查看区域信息"></a>查看区域信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --get-active-zones<span class="comment">#查看区域信息</span></span><br></pre></td></tr></table></figure><h4 id="查看指定接口所属区域"><a href="#查看指定接口所属区域" class="headerlink" title="查看指定接口所属区域"></a>查看指定接口所属区域</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --get-zone-of-interface=eth0<span class="comment">#查看指定接口所属区域</span></span><br></pre></td></tr></table></figure><h3 id="添加操作"><a href="#添加操作" class="headerlink" title="添加操作"></a>添加操作</h3><h4 id="添加开放服务"><a href="#添加开放服务" class="headerlink" title="添加开放服务"></a>添加开放服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=http  --permanent <span class="comment">#http改为要开放的服务，--permanent参数表示永久生效，不加重启后失效</span></span><br></pre></td></tr></table></figure><blockquote>  <p>注意：<br>如果要添加的端口没有对应的服务，需新建一个服务，在/usr/lib/firewalld/services目录下新建一个xml文件，如：my.xml,添加以下内容（重启firewalld）：<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line"></span><br><span class="line">&lt;service&gt;</span><br><span class="line">&lt;short&gt;服务名&lt;/short&gt;</span><br><span class="line">&lt;description&gt;描述&lt;/description&gt;</span><br><span class="line">&lt;port protocol=<span class="string">"协议"</span> port=<span class="string">"端口号"</span>/&gt;</span><br><span class="line">&lt;/service&gt;</span><br></pre></td></tr></table></figure>  </p></blockquote><h4 id="开放一个端口"><a href="#开放一个端口" class="headerlink" title="开放一个端口"></a>开放一个端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="拒绝操作"><a href="#拒绝操作" class="headerlink" title="拒绝操作"></a>拒绝操作</h3><h4 id="拒绝所有数据包"><a href="#拒绝所有数据包" class="headerlink" title="拒绝所有数据包"></a>拒绝所有数据包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --panic-on<span class="comment">#拒绝所有数据包</span></span><br></pre></td></tr></table></figure><h4 id="取消拒绝状态"><a href="#取消拒绝状态" class="headerlink" title="取消拒绝状态"></a>取消拒绝状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --panic-off<span class="comment">#取消拒绝状态</span></span><br></pre></td></tr></table></figure><h4 id="查看是否拒绝"><a href="#查看是否拒绝" class="headerlink" title="查看是否拒绝"></a>查看是否拒绝</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-panic<span class="comment">#查看是否拒绝</span></span><br></pre></td></tr></table></figure><h4 id="删除一个已开放的操作"><a href="#删除一个已开放的操作" class="headerlink" title="删除一个已开放的操作"></a>删除一个已开放的操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="更新防火墙规则"><a href="#更新防火墙规则" class="headerlink" title="更新防火墙规则"></a>更新防火墙规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload<span class="comment">#重新加载防火墙</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;firewalld服务命令&quot;&gt;&lt;a href=&quot;#firewalld服务命令&quot; class=&quot;headerlink&quot; title=&quot;firewalld服务命令&quot;&gt;&lt;/a&gt;firewalld服务命令&lt;/h2&gt;
&lt;figure class=&quot;highlight bas
      
    
    </summary>
    
      <category term="防火墙" scheme="https://www.kapyan.top/categories/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos7系统安装maven环境</title>
    <link href="https://www.kapyan.top/posts/3483075867.html"/>
    <id>https://www.kapyan.top/posts/3483075867.html</id>
    <published>2019-05-16T03:43:28.000Z</published>
    <updated>2019-05-17T03:20:46.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="yum源安装maven"><a href="#yum源安装maven" class="headerlink" title="yum源安装maven"></a>yum源安装maven</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo</span><br><span class="line">sed -i s/\<span class="variable">$releasever</span>/7/g /etc/yum.repos.d/epel-apache-maven.repo</span><br><span class="line">yum install -y maven</span><br><span class="line">mvn -version<span class="comment">#查看maven版本</span></span><br></pre></td></tr></table></figure><h2 id="修改maven默认仓库为阿里云仓库"><a href="#修改maven默认仓库为阿里云仓库" class="headerlink" title="修改maven默认仓库为阿里云仓库"></a>修改maven默认仓库为阿里云仓库</h2><p>编辑/etc/maven/settings.xml，在mirros节点添加以下内容<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">    &lt;name&gt;aliyun maven&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</span><br><span class="line">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;       </span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure></p><h2 id="mvn命令打包"><a href="#mvn命令打包" class="headerlink" title="mvn命令打包"></a>mvn命令打包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install -Dmaven.test.skip=<span class="literal">true</span><span class="comment">#-Dmaven.test.skip跳过测试，</span></span><br></pre></td></tr></table></figure><blockquote>  <p>注：<br>mvn clean    package依次执行clean、resources、compile、testResources、testCompile、test、jar(打包)等７个阶段。<br>mvn    clean    install依次执行clean、resources、compile、testResources、testCompile、test、jar(打包)、install等8个阶段。<br>mvn    clean    deploy依次执行clean、resources、compile、testResources、testCompile、test、jar(打包)、install、deploy等９个阶段。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;yum源安装maven&quot;&gt;&lt;a href=&quot;#yum源安装maven&quot; class=&quot;headerlink&quot; title=&quot;yum源安装maven&quot;&gt;&lt;/a&gt;yum源安装maven&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;tabl
      
    
    </summary>
    
      <category term="持续集成" scheme="https://www.kapyan.top/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
      <category term="jenkins" scheme="https://www.kapyan.top/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/jenkins/"/>
    
    
      <category term="maven" scheme="https://www.kapyan.top/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>gitlab配置发送邮箱</title>
    <link href="https://www.kapyan.top/posts/2918495377.html"/>
    <id>https://www.kapyan.top/posts/2918495377.html</id>
    <published>2019-05-06T07:33:18.000Z</published>
    <updated>2019-05-06T08:03:43.360Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>编辑/etc/gitlab/gitlab.rb文件，在文件结尾添加以下内容：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[<span class="string">'smtp_enable'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_address'</span>] = <span class="string">"smtp.exmail.qq.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_port'</span>] = 465</span><br><span class="line">gitlab_rails[<span class="string">'smtp_user_name'</span>] = <span class="string">"1066818026@qq.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_password'</span>] = <span class="string">"mail_password"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_authentication'</span>] = <span class="string">"login"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_enable_starttls_auto'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_tls'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'gitlab_email_from'</span>] = <span class="string">'1066818026@qq.com'</span></span><br></pre></td></tr></table></figure></p><h2 id="重新加载配置"><a href="#重新加载配置" class="headerlink" title="重新加载配置"></a>重新加载配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure<span class="comment">#重新加载配置</span></span><br></pre></td></tr></table></figure><h2 id="验证邮件发送"><a href="#验证邮件发送" class="headerlink" title="验证邮件发送"></a>验证邮件发送</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rails console<span class="comment">#进入gitlab控制台</span></span><br><span class="line"><span class="comment">#发送测试邮件</span></span><br><span class="line">Notify.test_email(<span class="string">'1066818026@qq.com'</span>, <span class="string">'gitlab'</span>, <span class="string">'gitlab test'</span>).deliver_now</span><br></pre></td></tr></table></figure><h2 id="重启gitlab"><a href="#重启gitlab" class="headerlink" title="重启gitlab"></a>重启gitlab</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;修改配置文件&quot;&gt;&lt;a href=&quot;#修改配置文件&quot; class=&quot;headerlink&quot; title=&quot;修改配置文件&quot;&gt;&lt;/a&gt;修改配置文件&lt;/h2&gt;
&lt;p&gt;编辑/etc/gitlab/gitlab.rb文件，在文件结尾添加以下内容：&lt;br&gt;
  &lt;figure 
      
    
    </summary>
    
      <category term="gitlab" scheme="https://www.kapyan.top/categories/gitlab/"/>
    
    
      <category term="gitlab" scheme="https://www.kapyan.top/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>docker中遇到的坑</title>
    <link href="https://www.kapyan.top/posts/243756207.html"/>
    <id>https://www.kapyan.top/posts/243756207.html</id>
    <published>2019-05-05T08:32:22.000Z</published>
    <updated>2019-05-05T09:09:15.421Z</updated>
    
    <content type="html"><![CDATA[<h2 id="error-creating-overlay-mount-to-…-merged-invalid-argument"><a href="#error-creating-overlay-mount-to-…-merged-invalid-argument" class="headerlink" title="error creating overlay mount to …/merged: invalid argument"></a>error  creating overlay mount to …/merged: invalid argument</h2><p>在使用阿里云的Centos镜像重启docker容器时遇到该问题，这个问题是由于selinux造成的。系统中关闭了selinux，而docker上的selinux却是开启的，因此会产生该错误。<br>解决方法：将/etc/selinux/config中的SELINUX=disabled改成SELINUX=permissive。<br>参考链接：<a href="https://github.com/coreos/bugs/issues/2340">https://github.com/coreos/bugs/issues/2340</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;error-creating-overlay-mount-to-…-merged-invalid-argument&quot;&gt;&lt;a href=&quot;#error-creating-overlay-mount-to-…-merged-invalid-argument&quot; clas
      
    
    </summary>
    
      <category term="虚拟化" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="docker" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/docker/"/>
    
    
      <category term="docker" scheme="https://www.kapyan.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>linux上挂载windows目录</title>
    <link href="https://www.kapyan.top/posts/2483896817.html"/>
    <id>https://www.kapyan.top/posts/2483896817.html</id>
    <published>2019-04-19T09:36:43.000Z</published>
    <updated>2019-04-19T10:06:07.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="共享需要挂载的windows目录"><a href="#共享需要挂载的windows目录" class="headerlink" title="共享需要挂载的windows目录"></a>共享需要挂载的windows目录</h2><p>在需要挂载的目录上右击鼠标，一次点击“属性”-&gt;“共享”-&gt;“共享(S…)”<br><img src="/posts/2483896817/fileshare.png" alt="share"></p><h2 id="挂载在linux系统上"><a href="#挂载在linux系统上" class="headerlink" title="挂载在linux系统上"></a>挂载在linux系统上</h2><p>格式为:mount -t cifs //ip/共享目录 /linux挂载目录 -o  username=用户名,password=密码,vers=2.0,uid=linux用户,gid=linux用户组<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /sharedata<span class="comment">#创建挂载目录</span></span><br><span class="line">mount -t cifs //192.168.1.10/go /sharedata -o username=administrator,password=123456.vers=2.0,uid=<span class="built_in">test</span>,gid=<span class="built_in">test</span></span><br></pre></td></tr></table></figure></p><p>注：此方式为临时挂载，重启系统后失效</p><h3 id="永久挂载"><a href="#永久挂载" class="headerlink" title="永久挂载"></a>永久挂载</h3><p>编辑/etc/fstab文件<br>在末行加入以下内容<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//192.168.1.10/go/sharedata cifsusername=administrator,password=123456.vers=2.0,uid=<span class="built_in">test</span>,gid=<span class="built_in">test</span>00</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;共享需要挂载的windows目录&quot;&gt;&lt;a href=&quot;#共享需要挂载的windows目录&quot; class=&quot;headerlink&quot; title=&quot;共享需要挂载的windows目录&quot;&gt;&lt;/a&gt;共享需要挂载的windows目录&lt;/h2&gt;
&lt;p&gt;在需要挂载的目录上右击鼠标
      
    
    </summary>
    
      <category term="文件共享" scheme="https://www.kapyan.top/categories/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"/>
    
    
      <category term="文件共享" scheme="https://www.kapyan.top/tags/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装配置Shadowsocks客户端</title>
    <link href="https://www.kapyan.top/posts/946277536.html"/>
    <id>https://www.kapyan.top/posts/946277536.html</id>
    <published>2019-04-18T09:03:56.000Z</published>
    <updated>2019-04-18T09:35:28.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Shadowsocks客户端"><a href="#安装Shadowsocks客户端" class="headerlink" title="安装Shadowsocks客户端"></a>安装Shadowsocks客户端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install python-pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><h3 id="配置Shadowsocks客户端"><a href="#配置Shadowsocks客户端" class="headerlink" title="配置Shadowsocks客户端"></a>配置Shadowsocks客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/shadowsocks</span><br><span class="line">vi /etc/shadowsocks/shadowsocks.json</span><br></pre></td></tr></table></figure><p>添加以下配置：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"server ip/server name"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>:11211,</span><br><span class="line">    <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>:1080,</span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"password"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>:300,</span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="string">"fast_open"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"workers"</span>: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注：将server、server_port、password、method替换为自己的账号信息<br>参数说明：</p><ul>  <li>server：Shadowsocks服务器地址</li>  <li>server_port：Shadowsocks服务器端口</li>  <li>local_address：本地IP</li>  <li>local_port：本地端口</li>  <li>password：Shadowsocks连接密码</li>  <li>timeout：等待超时时间</li>  <li>method：加密方式</li>  <li>workers:工作线程数</li>  <li>fast_open：true或false。开启fast_open以降低延迟，但要求Linux内核在3.7+,<br>开启方法：<code>echo      3 &gt; /proc/sys/net/ipv4/tcp_fastopen</code></li></ul><h3 id="配置自启动脚本"><a href="#配置自启动脚本" class="headerlink" title="配置自启动脚本"></a>配置自启动脚本</h3><p>新建启动脚本文件/etc/systemd/system/shadowsocks.service<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Shadowsocks</span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line">ExecStart=/usr/bin/sslocal -c /etc/shadowsocks/shadowsocks.json</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>启动Shadowsocks客户端<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> shadowsocks.service</span><br><span class="line">systemctl start shadowsocks.service</span><br><span class="line">systemctl status shadowsocks.services</span><br></pre></td></tr></table></figure></p><p>验证Shadowsocks客户端是否正常运行：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --socks5 127.0.0.1:1080 http://httpbin.org/ip</span><br></pre></td></tr></table></figure></p><h2 id="安装配置Privoxy"><a href="#安装配置Privoxy" class="headerlink" title="安装配置Privoxy"></a>安装配置Privoxy</h2><p>Shadowsocks是一个socket5服务，需要使用 Privoxy 把流量转到 http/https 上。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install privoxy</span><br><span class="line">systemctl <span class="built_in">enable</span> privoxy</span><br><span class="line">systemctl start privoxy</span><br><span class="line">systemctl status privoxy</span><br></pre></td></tr></table></figure></p><h3 id="配置Privoxy"><a href="#配置Privoxy" class="headerlink" title="配置Privoxy"></a>配置Privoxy</h3><p>修改配置文件/etc/privoxy/config,取消下面两行注释<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen-address 127.0.0.1:8118 </span><br><span class="line">forward-socks5t / 127.0.0.1:1080 .</span><br></pre></td></tr></table></figure></p><h3 id="设置http-https代理"><a href="#设置http-https代理" class="headerlink" title="设置http/https代理"></a>设置http/https代理</h3><p>修改配置文件/etc/profile<br>添加如下信息：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:8118</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:8118</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl www.google.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装Shadowsocks客户端&quot;&gt;&lt;a href=&quot;#安装Shadowsocks客户端&quot; class=&quot;headerlink&quot; title=&quot;安装Shadowsocks客户端&quot;&gt;&lt;/a&gt;安装Shadowsocks客户端&lt;/h2&gt;
&lt;figure class=&quot;h
      
    
    </summary>
    
      <category term="代理" scheme="https://www.kapyan.top/categories/%E4%BB%A3%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>在CentOS7 安装selenium+chrome+chromedriver</title>
    <link href="https://www.kapyan.top/posts/2537485430.html"/>
    <id>https://www.kapyan.top/posts/2537485430.html</id>
    <published>2019-04-18T08:28:44.000Z</published>
    <updated>2019-04-18T08:57:23.269Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Chrome浏览器"><a href="#安装Chrome浏览器" class="headerlink" title="安装Chrome浏览器"></a>安装Chrome浏览器</h2><h3 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/etc/yum.repos.d/google-chrome.repo&lt;&lt;EOF</span><br><span class="line">[google-chrome]</span><br><span class="line">name=google-chrome</span><br><span class="line">baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="安装google-chrome"><a href="#安装google-chrome" class="headerlink" title="安装google-chrome"></a>安装google-chrome</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install google-chrome-stable--nogpgcheck</span><br><span class="line">google-chrome --version<span class="comment">#查看版本</span></span><br></pre></td></tr></table></figure><p><a href="http://npm.taobao.org/mirrors/chromedriver/">chromedriver下载地址</a><br>根据google-chrome版本下载对应的chromedriver，解压至/usr/bin/目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/bin/xvfb-chrome<span class="comment">#添加以下内容</span></span><br><span class="line"><span class="function"><span class="title">_kill_procs</span></span>() &#123;  </span><br><span class="line">  <span class="built_in">kill</span> -TERM <span class="variable">$chrome</span>  </span><br><span class="line">  <span class="built_in">wait</span> <span class="variable">$chrome</span>  </span><br><span class="line">  <span class="built_in">kill</span> -TERM <span class="variable">$xvfb</span>  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># Setup a trap to catch SIGTERM and relay it to child processes  </span></span><br><span class="line"><span class="built_in">trap</span> _kill_procs SIGTERM  </span><br><span class="line">  </span><br><span class="line">XVFB_WHD=<span class="variable">$&#123;XVFB_WHD:-1280x720x16&#125;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># Start Xvfb  </span></span><br><span class="line">Xvfb :99 -ac -screen 0 <span class="variable">$XVFB_WHD</span> -nolisten tcp &amp;  </span><br><span class="line">xvfb=$!  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">export</span> DISPLAY=:99  </span><br><span class="line">  </span><br><span class="line">chrome --no-sandbox --<span class="built_in">disable</span>-gpu<span class="variable">$@</span> &amp;  </span><br><span class="line">chrome=$!  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">wait</span> <span class="variable">$chrome</span>  </span><br><span class="line"><span class="built_in">wait</span> <span class="variable">$xvfb</span></span><br></pre></td></tr></table></figure><p>更改Chrome启动软连接<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/bin/xvfb-chrome<span class="comment">#添加执行权限</span></span><br><span class="line">ln -s /etc/alternatives/google-chrome /usr/bin/chrome </span><br><span class="line">rm -rf /usr/bin/google-chrome </span><br><span class="line">ln -s /usr/bin/xvfb-chrome /usr/bin/google-chrome</span><br></pre></td></tr></table></figure></p><h2 id="安装selenium"><a href="#安装selenium" class="headerlink" title="安装selenium"></a>安装selenium</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install selenium</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>新建Python脚本test.py,添加以下内容<br>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">options = webdriver.ChromeOptions()</span><br><span class="line">options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line">options.add_argument(<span class="string">'--disable-gpu'</span>)</span><br><span class="line">options.add_argument(<span class="string">'--no-sandbox'</span>)</span><br><span class="line">driver = webdriver.Chrome(executable_path=<span class="string">"/usr/bin/chromedriver"</span>, chrome_options=options)</span><br><span class="line">driver.get(<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line">print(driver.page_source)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure></p><p>运行<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 test.py <span class="comment">#无报错则正常</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装Chrome浏览器&quot;&gt;&lt;a href=&quot;#安装Chrome浏览器&quot; class=&quot;headerlink&quot; title=&quot;安装Chrome浏览器&quot;&gt;&lt;/a&gt;安装Chrome浏览器&lt;/h2&gt;
&lt;h3 id=&quot;配置yum源&quot;&gt;&lt;a href=&quot;#配置yum源&quot; cl
      
    
    </summary>
    
      <category term="python" scheme="https://www.kapyan.top/categories/python/"/>
    
    
      <category term="Selenium" scheme="https://www.kapyan.top/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack各服务组件及架构</title>
    <link href="https://www.kapyan.top/posts/2462062835.html"/>
    <id>https://www.kapyan.top/posts/2462062835.html</id>
    <published>2019-04-16T00:50:11.000Z</published>
    <updated>2019-04-16T02:30:37.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="openstack各组件说明"><a href="#openstack各组件说明" class="headerlink" title="openstack各组件说明"></a>openstack各组件说明</h2><table>  <thead>    <tr>      <th></th>      <th>项目名称</th>      <th>描述</th>    </tr>  </thead>  <tbody>    <tr>      <td>服务</td>      <td></td>      <td></td>    </tr>    <tr>      <td>Dashboard</td>      <td>Horizon</td>      <td>提供了一个基于web的自服务门户，与openstack底层服务交互，如：启动实例、分配IP及配置访问控制</td>    </tr>    <tr>      <td>Compute</td>      <td>Nova</td>      <td>在openstack环境中计算实例的生命周期管理。按需响应包括生成、调度、回收虚拟机等操作</td>    </tr>    <tr>      <td>Networking</td>      <td>Neutron</td>      <td>确保为其他openstack服务提供网络连接即服务，如openstack计算。为用户提供api定义网络和使用。基于插件的架构支持众多的网络提供商和技术</td>    </tr>    <tr>      <td>存储</td>      <td></td>      <td></td>    </tr>    <tr>      <td>Object Storage</td>      <td>Swift</td>      <td>通过一个restful,基于http的应用程序接口存储和任意检索的非结构化数据对象。它拥有高容错机制，基于数据复制和可扩展架构。它的实现像是一个文件服务器需要挂载目录。在此种方式下，它写入对象和文件到多个硬盘中，以确保数据是在集群内跨服务器的多份复制</td>    </tr>    <tr>      <td>Block storage</td>      <td>Cinder</td>      <td>为运行实例而提供的持久性块存储。它的可插拔驱动架构功能有助于创建和管理块存储设备</td>    </tr>    <tr>      <td>共享服务</td>      <td></td>      <td></td>    </tr>    <tr>      <td>Identity service</td>      <td>Keystone</td>      <td>为其他openstack服务提供认证和授权服务，为所有openstack服务提供一个端点目录</td>    </tr>    <tr>      <td>Image service</td>      <td>Glance</td>      <td>存储和检索虚拟机磁盘镜像，openstack计算会实例部署时使用此服务</td>    </tr>    <tr>      <td>Telemetry</td>      <td>Ceilometer</td>      <td>为openstack云的计费、基准、扩展性及统计等目的提供检测和计量</td>    </tr>    <tr>      <td>高层次服务</td>      <td></td>      <td></td>    </tr>    <tr>      <td>Orchestration</td>      <td>Heat</td>      <td>orchestration服务支持多样化的综合的云应用，通过调用openstack-native rest        api和cloudformation-compatible query api，支持：term:`HOT &lt;Heat        Orchestration Template (HOT)&gt;`格式模板或者AWS CloudFormation格式模板</td>    </tr>  </tbody></table><style>  table th:nth-of-type(1) {    width: 15%;  }  table th:nth-of-type(2) {    width: 15%;  }  table th:nth-of-type(3) {    width: 70%;  }</style>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;openstack各组件说明&quot;&gt;&lt;a href=&quot;#openstack各组件说明&quot; class=&quot;headerlink&quot; title=&quot;openstack各组件说明&quot;&gt;&lt;/a&gt;openstack各组件说明&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;t
      
    
    </summary>
    
      <category term="虚拟化" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="OpenStack" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/OpenStack/"/>
    
    
      <category term="OpenStack" scheme="https://www.kapyan.top/tags/OpenStack/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack部署</title>
    <link href="https://www.kapyan.top/posts/1681399788.html"/>
    <id>https://www.kapyan.top/posts/1681399788.html</id>
    <published>2019-03-29T05:42:07.000Z</published>
    <updated>2019-04-19T02:25:27.688Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通过packstack安装OpenStack"><a href="#通过packstack安装OpenStack" class="headerlink" title="通过packstack安装OpenStack"></a>通过packstack安装OpenStack</h2><p>操作系统：Centos7+<br>配置:</p><ul>  <li>2+ vCPU</li>  <li>4G+ 内存</li>  <li>50G+ 磁盘</li>  <li>双网卡（单网卡也可）</li></ul><h3 id="非英文环境下设置"><a href="#非英文环境下设置" class="headerlink" title="非英文环境下设置"></a>非英文环境下设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/etc/environment&lt;&lt;EOF</span><br><span class="line">LANG=en_US.utf-8</span><br><span class="line">LC_ALL=en_US.utf-8</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙、网络管理服务、selinux"><a href="#关闭防火墙、网络管理服务、selinux" class="headerlink" title="关闭防火墙、网络管理服务、selinux"></a>关闭防火墙、网络管理服务、selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop NetworkManager.service</span><br><span class="line">systemctl <span class="built_in">disable</span> NetworkManager.service</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><h3 id="添加安装源为阿里云的OpenStack-YUM源"><a href="#添加安装源为阿里云的OpenStack-YUM源" class="headerlink" title="添加安装源为阿里云的OpenStack YUM源"></a>添加安装源为阿里云的OpenStack  YUM源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/etc/yum.repos.d/openstack-ocata.repo&lt;&lt;EOF</span><br><span class="line">[OpenStack-ocata]</span><br><span class="line">name=openstack-ocata</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/7.6.1810/cloud/x86_64/openstack-ocata/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>添加kvm源<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/etc/yum.repos.d/kvm.repo&lt;&lt;EOF</span><br><span class="line">[KVM]</span><br><span class="line">name=KVM</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/7.6.1810/virt/x86_64/kvm-common/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p><h3 id="安装epel源"><a href="#安装epel源" class="headerlink" title="安装epel源"></a>安装epel源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br></pre></td></tr></table></figure><h3 id="安装packstack工具"><a href="#安装packstack工具" class="headerlink" title="安装packstack工具"></a>安装packstack工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install openstack-packstack</span><br></pre></td></tr></table></figure><h3 id="单机部署OpenStack"><a href="#单机部署OpenStack" class="headerlink" title="单机部署OpenStack"></a>单机部署OpenStack</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">packstack --allinone</span><br></pre></td></tr></table></figure><p>安装过程大概一个小时左右，用户名、密码在执行安装命令的当前目录的keystonerc_admin中<br><img src="/posts/1681399788/namepasswd.png" alt="password"></p><h3 id="登录dashboard"><a href="#登录dashboard" class="headerlink" title="登录dashboard"></a>登录dashboard</h3><p>访问<a href="http://host_ip/dashboard">http://host_ip/dashboard</a><br><img src="/posts/1681399788/dashboard.png" alt="dashboard"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;通过packstack安装OpenStack&quot;&gt;&lt;a href=&quot;#通过packstack安装OpenStack&quot; class=&quot;headerlink&quot; title=&quot;通过packstack安装OpenStack&quot;&gt;&lt;/a&gt;通过packstack安装OpenSta
      
    
    </summary>
    
      <category term="虚拟化" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="OpenStack" scheme="https://www.kapyan.top/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/OpenStack/"/>
    
    
      <category term="openstack" scheme="https://www.kapyan.top/tags/openstack/"/>
    
  </entry>
  
  <entry>
    <title>Centos7下安装kettle</title>
    <link href="https://www.kapyan.top/posts/2220227672.html"/>
    <id>https://www.kapyan.top/posts/2220227672.html</id>
    <published>2019-03-20T09:18:40.000Z</published>
    <updated>2019-03-22T01:10:54.335Z</updated>
    
    <content type="html"><![CDATA[<h2 id="kettle简单介绍"><a href="#kettle简单介绍" class="headerlink" title="kettle简单介绍"></a>kettle简单介绍</h2><p>Kettle是一种开源的 ETL 解决方案，书中介绍了如何使用PDI来实现数据的剖析、清洗、校验、抽取、转换、加载等各类常见的ETL类工作。<br>除了ODS/DW类比较大型的应用外，Kettle实际还可以为中小企业提供灵活的数据抽取和数据处理的功能。<br>Kettle除了支持各种关系型数据库、HBase、MongoDB这样的NoSQL数据源外，它还支持Excel、Access这类小型的数据源。<br>并且通过插件扩展，Kettle  可以支持各类数据源。本书详细介绍了Kettle可以处理的数据源，<br>而且详细介绍了如何使用Kettle抽取增量数据。Kettle的数据处理功能也很强大，除了选择、过滤、分组、连接、排序这些常用的功能外，<br>Kettle  里的Java表达式、正则表达式、Java脚本、Java类等功能都非常灵活而强大，都非常适合于各种数据处理功能</p><h2 id="在centos7下安装kettle"><a href="#在centos7下安装kettle" class="headerlink" title="在centos7下安装kettle"></a>在centos7下安装kettle</h2><p>kettle依赖java，在linux环境下需要安装webkitgtk。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk -y</span><br></pre></td></tr></table></figure></p><p>安装webkitgtk时提示包找不到，很多文章中说<code>yum install epel-release</code>后可以安装webkitgtk，但尝试并无效。根据以下方法亲测有效。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.coreix.net/li.nux.ro/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm</span><br><span class="line">rpm -ivh nux-dextop-release-0-5.el7.nux.noarch.rpm</span><br><span class="line">yum install -y webkitgtk</span><br></pre></td></tr></table></figure></p><p><a href="2220227672/nux-dextop-release-0-5.el7.nux.noarch.rpm">nux-dextop-release-0-5.el7.nux.noarch.rpm下载</a><br>运行spoon.sh是提示java包存在异常无法启动kettle，将spoon.sh中的<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$OS</span> = <span class="string">"linux"</span> ]; <span class="keyword">then</span></span><br><span class="line">    ((((<span class="string">"<span class="variable">$_PENTAHO_JAVA</span>"</span> <span class="variable">$OPT</span> -jar <span class="string">"<span class="variable">$STARTUP</span>"</span> -lib <span class="variable">$LIBPATH</span> <span class="string">"<span class="variable">$&#123;1+$@&#125;</span>"</span>  2&gt;&amp;1; <span class="built_in">echo</span> $? &gt;&amp;3 ) | grep -viE <span class="string">"Gtk-WARNING|GLib-GObject|GLib-CRITICAL|^$"</span> &gt;&amp;4 ) 3&gt;&amp;1)| inputtoexitstatus ) 4&gt;&amp;1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="string">"<span class="variable">$_PENTAHO_JAVA</span>"</span> <span class="variable">$OPT</span> -jar <span class="string">"<span class="variable">$STARTUP</span>"</span> -lib <span class="variable">$LIBPATH</span> <span class="string">"<span class="variable">$&#123;1+$@&#125;</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><p>修改为<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$OS</span> = <span class="string">"linux"</span> ]; <span class="keyword">then</span></span><br><span class="line">    ((((<span class="string">"<span class="variable">$_PENTAHO_JAVA</span>"</span> <span class="variable">$OPT</span> -Dorg.eclipse.swt.internal.gtk.cairoGraphics=<span class="literal">false</span> -Dorg.eclipse.swt.browser.DefaultType=mozilla -jar <span class="string">"<span class="variable">$STARTUP</span>"</span> -lib <span class="variable">$LIBPATH</span> <span class="string">"<span class="variable">$&#123;1+$@&#125;</span>"</span>  2&gt;&amp;1; <span class="built_in">echo</span> $? &gt;&amp;3 ) | grep -viE <span class="string">"Gtk-WARNING|GLib-GObject|GLib-CRITICAL|^$"</span> &gt;&amp;4 ) 3&gt;&amp;1)| inputtoexitstatus ) 4&gt;&amp;1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="string">"<span class="variable">$_PENTAHO_JAVA</span>"</span> <span class="variable">$OPT</span> -jar <span class="string">"<span class="variable">$STARTUP</span>"</span> -lib <span class="variable">$LIBPATH</span> <span class="string">"<span class="variable">$&#123;1+$@&#125;</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><p>再次运行spoon.sh正常启动。</p><h2 id="数据库驱动下载"><a href="#数据库驱动下载" class="headerlink" title="数据库驱动下载"></a>数据库驱动下载</h2><p><a href="2220227672/ojdbc8.jar">oracle驱动下载</a><br><a href="2220227672/mysql-connector-java-5.1.46-bin.jar">mysql驱动下载</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;kettle简单介绍&quot;&gt;&lt;a href=&quot;#kettle简单介绍&quot; class=&quot;headerlink&quot; title=&quot;kettle简单介绍&quot;&gt;&lt;/a&gt;kettle简单介绍&lt;/h2&gt;
&lt;p&gt;Kettle是一种开源的 ETL 解决方案，书中介绍了如何使用PDI来实现
      
    
    </summary>
    
      <category term="数据同步" scheme="https://www.kapyan.top/categories/%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/"/>
    
    
      <category term="kettle" scheme="https://www.kapyan.top/tags/kettle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库常用操作</title>
    <link href="https://www.kapyan.top/posts/1523118387.html"/>
    <id>https://www.kapyan.top/posts/1523118387.html</id>
    <published>2019-03-18T02:35:37.000Z</published>
    <updated>2019-04-19T02:21:14.721Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库登录"><a href="#数据库登录" class="headerlink" title="数据库登录"></a>数据库登录</h2><h3 id="进入sqlplus命令提示符"><a href="#进入sqlplus命令提示符" class="headerlink" title="进入sqlplus命令提示符"></a>进入sqlplus命令提示符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlplus /nolog<span class="comment">#在cmd直接运行</span></span><br></pre></td></tr></table></figure><h3 id="以DBA身份连接"><a href="#以DBA身份连接" class="headerlink" title="以DBA身份连接"></a>以DBA身份连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlplus / as sysdba<span class="comment">#在cmd直接运行</span></span><br><span class="line">connect / as sysdba<span class="comment">#在sqlplus命令提示符下运行</span></span><br></pre></td></tr></table></figure><h3 id="普通用户登录"><a href="#普通用户登录" class="headerlink" title="普通用户登录"></a>普通用户登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlplus username/password<span class="comment">#在cmd直接运行</span></span><br><span class="line">connect username/password<span class="comment">#在sqlplus命令提示符下运行</span></span><br><span class="line">connect username/password@servername<span class="comment">#在sqlplus命令提示符下运行</span></span><br></pre></td></tr></table></figure><h2 id="创建新用户"><a href="#创建新用户" class="headerlink" title="创建新用户"></a>创建新用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user username identified by password;<span class="comment">#Oracle12中username前要加c##</span></span><br></pre></td></tr></table></figure><h2 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create tablespace tablespacename datafile <span class="string">'D:\app\orcdata\data.dbf'</span> szie 1024M;</span><br></pre></td></tr></table></figure><h2 id="将空间分配给用户"><a href="#将空间分配给用户" class="headerlink" title="将空间分配给用户"></a>将空间分配给用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user username default tablespace tablespacename;</span><br></pre></td></tr></table></figure><h2 id="为用户授权"><a href="#为用户授权" class="headerlink" title="为用户授权"></a>为用户授权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant create session,create table,unlimited tablespace to username;</span><br></pre></td></tr></table></figure><h2 id="Oralce监听状态"><a href="#Oralce监听状态" class="headerlink" title="Oralce监听状态"></a>Oralce监听状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lsnrctl status<span class="comment">#监听状态查看</span></span><br><span class="line">lsnrctl start<span class="comment">#监听状态启动</span></span><br><span class="line">lsnrctl stop<span class="comment">#监听状态停止</span></span><br></pre></td></tr></table></figure><h2 id="启动Oracle实例"><a href="#启动Oracle实例" class="headerlink" title="启动Oracle实例"></a>启动Oracle实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlplus / as sysdba</span><br><span class="line">start up</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据库登录&quot;&gt;&lt;a href=&quot;#数据库登录&quot; class=&quot;headerlink&quot; title=&quot;数据库登录&quot;&gt;&lt;/a&gt;数据库登录&lt;/h2&gt;
&lt;h3 id=&quot;进入sqlplus命令提示符&quot;&gt;&lt;a href=&quot;#进入sqlplus命令提示符&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="Oracle" scheme="https://www.kapyan.top/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://www.kapyan.top/tags/Oracle/"/>
    
  </entry>
  
</feed>
